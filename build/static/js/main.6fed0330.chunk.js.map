{"version":3,"sources":["userContext.js","utils/theme.js","components/routerLink.js","components/navbar.js","utils/routes.js","components/pageTitle.js","components/form.js","components/formField.js","components/progressButton.js","components/formButton.js","components/formFooter.js","database/database/config.js","database/database/hotdogs.js","database/database/users.js","database/database/index.js","database/wrapper.js","components/loginForm.js","components/successSnackbar.js","components/registerForm.js","components/hotdogCard.js","components/addForm.js","components/addFormDialog.js","components/homeHotdogGrid.js","components/landing.js","pages/home.js","pages/login.js","pages/register.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","React","createContext","UserContextProvider","props","useState","userId","setUserId","userName","setUserName","useEffect","id","sessionStorage","getItem","name","removeItem","setItem","Provider","value","setCurrentUserId","setCurrentUserName","children","theme","palette","primary","main","secondary","text","typography","fontFamily","join","overrides","MuiButton","containedPrimary","color","textPrimary","MuiInputLabel","root","fontSize","MuiSnackbarContent","backgroundColor","MuiCard","MuiCardMedia","height","paddingTop","MuiListItem","textTransform","MuiAppBar","colorPrimary","RouterLink","underline","to","Link","component","LinkBase","withRouter","useContext","AppBar","position","elevation","Toolbar","Box","display","alignItems","width","flexGrow","Typography","variant","p","Button","disableElevation","onClick","history","push","PageTitle","align","Form","bgcolor","flexDirection","justifyContent","icons","user","email","password","passwordConfirm","hotdogTitle","hotdogSausage","hotdogSauce","hotdogTopping","none","FormField","type","iconName","label","setValue","error","mr","TextField","onChange","event","target","trim","helperText","fullWidth","useStyles","makeStyles","wrapper","margin","spacing","buttonSpinner","top","left","marginTop","marginLeft","ProgressButton","loading","handleClick","classes","className","disabled","CircularProgress","size","FormButton","FormFooter","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","all","a","Promise","resolve","reject","firebase","firestore","collection","get","then","data","hotdogs","forEach","row","formattedRow","ts","seconds","catch","err","getCreatedBy","where","getCreatedByQuery","add","hotdog","Timestamp","now","login","auth","signInWithEmailAndPassword","credential","uid","register","createUserWithEmailAndPassword","doc","set","snapshot","users","getUser","getHotdogsCreatedByQuery","query","addHotdog","setEmail","emailError","setEmailError","setPassword","passwordError","setPasswordError","setLoading","emailValid","passwordValid","emailTrimmed","isEmail","DB","loginUserId","loginUser","SuccessSnackbar","open","setOpen","message","action","actionRoute","handleClose","reason","snackbarMessage","snackbarClose","IconButton","aria-label","snackbarAction","Snackbar","autoHideDuration","onClose","RegisterForm","setName","nameError","setNameError","setPasswordConfirm","passwordConfirmError","setPasswordConfirmError","registered","setRegistered","emptyError","nameValid","passwordConfirmValid","nameTrimmed","length","HotdogCard","title","ingredients","creatorName","date","Date","setTime","subheader","getDate","toLocaleString","month","getFullYear","avatar","Avatar","charAt","toUpperCase","Card","CardHeader","CardMedia","image","CardContent","List","dense","disablePadding","ListSubheader","ListItem","divider","ListItemIcon","ListItemText","inset","CardActions","isValid","input","setInput","setInputError","inputValid","inputTrimmed","match","AddForm","setTitle","titleError","setTitleError","sausage","setSausage","sausageError","setSausageError","sauce","setSauce","sauceError","setSauceError","toppingA","setToppingA","toppingAError","setToppingAError","toppingB","setToppingB","toppingBError","setToppingBError","added","setAdded","titleValid","sausageValid","sauceValid","toppingAValid","toppingBValid","creatorId","addStatus","console","log","fab","bottom","right","AddFormDialog","Fab","Dialog","maxWidth","DialogTitle","DialogContent","DialogContentText","HomeHotdogGrid","setHotdogs","hd","setHd","onSnapshot","changes","changeType","docChanges","change","sort","b","oldHotdogs","slice","filter","Grid","container","map","i","item","key","xs","onEnter","last","numItems","next","fetchMore","background","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","button","minWidth","span","marginRight","marginBottom","breakpoints","up","Landing","Container","Home","Login","Register","createMuiTheme","brandTheme","App","ThemeProvider","exact","path","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","Fragment","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6fed0330.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\n// User context - currently only holds the id of the currently logged in user\r\n// id is set to null if not logged in\r\n\r\n// note: https://stackoverflow.com/questions/54738681/how-to-change-context-value-while-using-react-hook-of-usecontext\r\n// Provider is still needed to wrap around App.js\r\n// if no provider is given, then useContext will simply take the default value of createContext() \r\n// rather than the current value\r\n\r\n// import UserContext inside a child component\r\nconst UserContext = React.createContext();\r\n\r\n// import UserContextProvider wrapper in App.js (parent)\r\nfunction UserContextProvider(props) {\r\n    const [userId, setUserId] = useState(null);\r\n    const [userName, setUserName] = useState(null);\r\n\r\n    function setCurrentUserId(id) {\r\n        setUserId(userId => id);\r\n    }\r\n\r\n    function setCurrentUserName(name) {\r\n        setUserName(userName => name);\r\n    }\r\n    \r\n    // persist context if page refreshes/rerouted to different page\r\n    useEffect(() => {\r\n        const id = sessionStorage.getItem('userId');\r\n        const name = sessionStorage.getItem('userName');\r\n        setUserId(id);\r\n        setUserName(name);\r\n    }, []);\r\n\r\n    // save context to session whenever variable changes, remove if set to null\r\n    useEffect(() => {\r\n        if (userId === null) {\r\n            sessionStorage.removeItem('userId');\r\n        } else {\r\n            sessionStorage.setItem('userId', userId);\r\n        }\r\n    }, [userId]);\r\n\r\n    useEffect(() => {\r\n        if (userName === null) {\r\n            sessionStorage.removeItem('userName');\r\n        } else {\r\n            sessionStorage.setItem('userName', userName);\r\n        }\r\n    }, [userName]);\r\n\r\n    return (\r\n        <UserContext.Provider value={{ userId, setCurrentUserId, userName, setCurrentUserName }}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    );\r\n}\r\n\r\nexport {\r\n    UserContext,\r\n    UserContextProvider,\r\n};","const theme = {\r\n\tpalette: {\r\n        primary: {\r\n            main: '#cbb09c'\r\n        },\r\n        secondary: {\r\n            main: '#ffffff'\r\n        },\r\n        text: {\r\n            primary: '#212121',\r\n            secondary: '#9e9e9e',\r\n        },\r\n    },\r\n    // closer to materialize's font (looks nicer than material-ui)\r\n    typography: {\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n    },\r\n    overrides: {\r\n        // white button text - Button \"color\" only changes background color\r\n        MuiButton: {\r\n            containedPrimary: {\r\n                color: '#ffffff'\r\n            },\r\n            textPrimary: {\r\n                color: '#cbb09c',\r\n                // '&:hover': {\r\n                //     backgroundColor: '#fafafa'\r\n                // }\r\n            },\r\n        },\r\n        // font size for a TextField label\r\n        MuiInputLabel: {\r\n            root: {\r\n                fontSize: 14\r\n            }\r\n        },\r\n        // background color for a Snackbar\r\n        MuiSnackbarContent: {\r\n            root: {\r\n                backgroundColor: '#00e676'\r\n                // backgroundColor: '#00c853'\r\n            }\r\n        },\r\n        // hotdog grid item size\r\n        MuiCard: {\r\n            root: {\r\n                // maxWidth: 300,\r\n            }\r\n        },\r\n        // height has to be specified for cardmedia, otherwise image invisible\r\n        MuiCardMedia: {\r\n            root: {\r\n                height: 0,\r\n                paddingTop: '100%',\r\n            }\r\n        },\r\n        // capitalize ListItemText\r\n        MuiListItem: {\r\n            root: {\r\n                textTransform: \"capitalize\"\r\n            }\r\n        },\r\n        // appbar color same as text.primary\r\n        MuiAppBar: {\r\n            colorPrimary: {\r\n                backgroundColor: '#212121',\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default theme;","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { Link as LinkBase } from 'react-router-dom';\r\n\r\n// react-router-dom Link with styling options of material-ui Link\r\nfunction RouterLink(props) {\r\n    const { color, underline, to } = props;\r\n    return (\r\n        <Link\r\n            component={LinkBase}\r\n            color={color}\r\n            underline={underline}\r\n            to={to}\r\n        >\r\n            {props.children}\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default RouterLink;\r\n","import React, { useContext } from 'react';\r\n// material ui\r\nimport { AppBar, Box, Button, Toolbar, Typography, } from '@material-ui/core';\r\n// routing\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as routes from '../utils/routes';\r\n// my components\r\nimport RouterLink from './routerLink';\r\n// routing\r\nimport { Link } from 'react-router-dom';\r\n// context\r\nimport { UserContext } from '../userContext';\r\n\r\nfunction NavBar(props) { \r\n    const { userId, setCurrentUserId, userName, setCurrentUserName } = useContext(UserContext);\r\n    \r\n    // unset context vars and redirect to login page\r\n    function handleLogout() {\r\n        setCurrentUserId(null);\r\n        setCurrentUserName(null);\r\n        props.history.push(routes.HOME);\r\n    }\r\n\r\n    return (\r\n        <AppBar position=\"sticky\" elevation={0}>\r\n            <Toolbar>\r\n                <Box display=\"flex\" alignItems=\"center\" width={1}>\r\n                    <Box flexGrow={1}>\r\n                        <Typography variant=\"h6\">\r\n                            <RouterLink color=\"primary\" underline=\"none\" to={routes.HOME}>\r\n                                Secret Ninja Hotdogs\r\n                            </RouterLink>\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box p={1}>\r\n                        { userId && \r\n                            <Typography variant=\"subtitle1\" color=\"secondary\">\r\n                                Welcome, {userName}!\r\n                            </Typography>\r\n                        }\r\n                        { !userId && \r\n                            <Button \r\n                                component={Link}\r\n                                to={routes.REGISTER}\r\n                                color=\"secondary\" \r\n                                variant=\"text\" \r\n                                disableElevation\r\n                            > \r\n                                Sign Up\r\n                            </Button>\r\n                        }\r\n                    </Box>\r\n                    <Box>\r\n                        { userId && \r\n                            <Button\r\n                                color=\"primary\"\r\n                                variant=\"text\" \r\n                                disableElevation\r\n                                onClick={() => handleLogout()}\r\n                            >\r\n                                Logout \r\n                            </Button>\r\n                        }\r\n                        { !userId && \r\n                            <Button \r\n                                component={Link}\r\n                                to={routes.LOGIN}\r\n                                color=\"primary\"\r\n                                variant=\"text\" \r\n                                disableElevation\r\n                            > \r\n                                Login\r\n                            </Button>\r\n                        }\r\n                    </Box>\r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","export const HOME = '/';\r\nexport const ADD = '/add';\r\nexport const LOGIN = '/login';\r\nexport const REGISTER = '/register';\r\nexport const DETAILS = '/details';\r\nexport const SEARCH = '/search';","import React from 'react';\r\n// material ui\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction PageTitle(props) {\r\n\treturn (\r\n\t\t<Typography variant=\"h4\" color=\"textSecondary\" align=\"center\">\r\n            {props.text}\r\n        </Typography>\r\n\t);\r\n}\r\n\r\nexport default PageTitle;","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// Wrapper for all forms\r\nfunction Form(props) {\r\n    return (\r\n        <Box \r\n            bgcolor=\"secondary.main\"\r\n            display=\"flex\" \r\n            flexDirection=\"column\"\r\n            justifyContent=\"center\"\r\n            p={2}\r\n        >\r\n            {props.children}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport { Box, TextField } from '@material-ui/core';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\r\nimport OutdoorGrillIcon from '@material-ui/icons/OutdoorGrill';\r\nimport WavesIcon from '@material-ui/icons/Waves';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\n\r\nconst icons = {\r\n    user: <AccountCircleIcon/>,\r\n    email: <EmailIcon/>,\r\n    password: <LockIcon/>,\r\n    passwordConfirm: <LockOpenIcon/>,\r\n    hotdogTitle: <RestaurantIcon/>,\r\n    hotdogSausage: <OutdoorGrillIcon/>,\r\n    hotdogSauce: <WavesIcon/>,\r\n    hotdogTopping: <ShoppingCartIcon/>,\r\n    none: <ShoppingCartIcon color=\"secondary\"/>,\r\n}\r\n\r\n// Text field with icon - to be wrapped in a Form\r\n// To display errors correctly, set error as \" \" if there is no error\r\nfunction FormField(props) {\r\n    const { type, iconName, label, value, setValue, error } = props;\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" alignItems=\"center\" p={1}>\r\n            <Box mr={0.5}>\r\n                {icons[iconName]}\r\n            </Box>\r\n            <Box flexGrow={1} p={1}>\r\n                <TextField\r\n                    label={label}\r\n                    type={type}\r\n                    value={value}\r\n                    onChange={(event) => setValue(event.target.value)}\r\n                    error={error.trim() !== \"\"}\r\n                    helperText={error}\r\n                    fullWidth\r\n                />\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default FormField;\r\n","import React from 'react';\r\nimport { Button, CircularProgress } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// show loading spinner on top of button\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n    buttonSpinner: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n}));\r\n\r\nfunction ProgressButton(props) {\r\n    const { text, loading, handleClick } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Button\r\n                color=\"primary\" \r\n                variant=\"contained\"\r\n                disabled={loading}\r\n                onClick={() => handleClick()}\r\n                disableElevation\r\n            >\r\n                {text}\r\n            </Button>\r\n            {loading && <CircularProgress size={24} className={classes.buttonSpinner}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProgressButton;","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport ProgressButton from './progressButton';\r\n\r\n// ProgressButton wrapper - to be wrapped in a Form\r\nfunction FormButton(props) {\r\n    const { text, loading, handleClick } = props;\r\n    return (\r\n        <Box display=\"flex\" justifyContent=\"center\" p={1}>\r\n            <ProgressButton text={text} loading={loading} handleClick={handleClick}/>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default FormButton;","import React from 'react';\r\nimport { Box, Typography } from '@material-ui/core';\r\n\r\n// Misc message at the end of a Form\r\nfunction FormFooter(props) {\r\n    return (\r\n        <Box display=\"flex\" justifyContent=\"center\" p={1}>\r\n            <Typography color=\"textSecondary\" variant=\"body2\">\r\n                {props.children}\r\n            </Typography>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default FormFooter;","const config = {\r\n    apiKey: \"AIzaSyCedmZ8AuayWY5Y5M5nODo1FWMRwsN1gWk\",\r\n    authDomain: \"secret-hotdogs.firebaseapp.com\",\r\n    databaseURL: \"https://secret-hotdogs.firebaseio.com\",\r\n    projectId: \"secret-hotdogs\",\r\n    storageBucket: \"secret-hotdogs.appspot.com\",\r\n    messagingSenderId: \"384829400176\",\r\n    appId: \"1:384829400176:web:f2d1a3a192bbf62063c0b5\"\r\n};\r\n\r\nexport default config;","// imports\r\nimport { firebase } from './index';\r\n\r\n// return all hotdogs with id and readable timestamps\r\nconst all = async () => {\r\n    return new Promise((resolve, reject) => {\r\n        firebase.firestore().collection('hotdogs').get()\r\n        .then(data => {\r\n            // note: each \"row\" is a \"DocumentSnapshot\": https://firebase.google.com/docs/reference/js/firebase.firestore.DocumentSnapshot\r\n            let hotdogs = [];\r\n            data.forEach(row => {\r\n                // add document id\r\n                var formattedRow = row.data();\r\n                formattedRow[\"id\"] = row.id;\r\n                formattedRow.ts = row.data().ts.seconds;\r\n                hotdogs.push(formattedRow);\r\n            });\r\n            resolve(hotdogs);\r\n        })\r\n        .catch(err => reject(err))\r\n    });\r\n}\r\n\r\n// returns all hotdogs where creator == given user id\r\nconst getCreatedBy = async (id) => {\r\n    return new Promise((resolve, reject) => {\r\n        firebase.firestore().collection('hotdogs').where(\"creatorId\", \"==\", id).get()\r\n        .then(data => {\r\n            let hotdogs = [];\r\n            data.forEach(row => {\r\n                // add document id\r\n                var formattedRow = row.data();\r\n                formattedRow[\"id\"] = row.id;\r\n                formattedRow.ts = row.data().ts.seconds;\r\n                hotdogs.push(formattedRow);\r\n            });\r\n            resolve(hotdogs);\r\n        })\r\n        .catch(err => reject(err))\r\n    });\r\n}\r\n\r\n// real-time query - returned to hotdogGrid where onSnapshot will be called\r\nconst getCreatedByQuery = async (id) => {\r\n    return firebase.firestore().collection('hotdogs').where(\"creatorId\", \"==\", id);\r\n}\r\n\r\n// insert - returns newly created hotdog id if successful\r\nconst add = async (hotdog) => {\r\n    hotdog[\"ts\"] = firebase.firestore.Timestamp.now();\r\n    return new Promise((resolve, reject) => {\r\n        // add returns a \"DocumentReference\"\r\n        firebase.firestore().collection('hotdogs').add(hotdog)\r\n        .then(data => resolve(data.id))\r\n        .catch(err => reject(err))\r\n    });\r\n}\r\n\r\nexport {\r\n    all,\r\n    getCreatedBy,\r\n    getCreatedByQuery,\r\n    add,\r\n}\r\n","// imports\r\nimport { firebase } from './index';\r\n\r\n// return user details if login successful, otherwise return firebase error\r\n// \"credential\" is a UserCredential: https://firebase.google.com/docs/reference/js/firebase.auth#usercredential\r\nconst login = async (email, password) => {\r\n    return new Promise((resolve, reject) => {\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n        .then(credential => resolve(credential.user.uid))\r\n        .catch(err => reject(err));\r\n    });\r\n}\r\n\r\n// return true if register successful, otherwise return firebase error\r\n// inserting with custom id: https://stackoverflow.com/questions/48541270/how-to-add-document-with-custom-id-to-firestore\r\nconst register = async (name, email, password) => {\r\n    return new Promise((resolve, reject) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n        .then(credential => {\r\n            // add to users collection and set name if register successful\r\n            const userId = credential.user.uid;\r\n            firebase.firestore().collection('users')\r\n            .doc(userId).set({\r\n                name: name\r\n            })\r\n            .then(() => resolve(userId))\r\n            .catch(err => reject(err));\r\n        })\r\n        .catch(err => reject(err));\r\n    });\r\n}\r\n\r\n// get user details given firebase auth id\r\nconst get = async (id) => {\r\n    return new Promise((resolve, reject) => {\r\n        firebase.firestore().collection('users').doc(id).get()\r\n        .then(snapshot => resolve(snapshot.data()))\r\n        .catch(err => reject(err));\r\n    });\r\n}\r\n\r\nexport {\r\n    login,\r\n    register,\r\n    get\r\n}\r\n","// firebase setup\r\nimport config from './config';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n// consolidating tables\r\nimport * as hotdogs from './hotdogs';\r\nimport * as users from './users';\r\n\r\n// initialize firebase connection\r\nfirebase.initializeApp(config);\r\n\r\nexport {\r\n    firebase,\r\n    hotdogs,\r\n    users\r\n}\r\n","// wrapper for database access and error catching\r\n// similar functionality as old server/routes.js\r\nimport { users, hotdogs } from './database';\r\n\r\n// ========================================= USERS ===========================================\r\nconst login = async (email, password) => {\r\n    try {\r\n        let userId = await users.login(email, password);\r\n        return userId;\r\n    } catch(e) {\r\n        // console.log(\"database: \" + e);\r\n        return false;\r\n    }\r\n}\r\n\r\nconst register = async (name, email, password) => {\r\n    try {\r\n        let userId = await users.register(name.trim(), email.trim(), password);\r\n        // console.log(\"database: User with id \" + userId + \" successfully created\");\r\n        return true;\r\n    } catch(e) {\r\n        // console.log(\"database: \" + e);\r\n        return false;\r\n    }\r\n}\r\n\r\nconst getUser = async (id) => {\r\n    try {\r\n        let user = await users.get(id);\r\n        return user;\r\n    } catch(e) {\r\n        // console.log(\"database: \" + e);\r\n        return false;\r\n    }\r\n}\r\n\r\n// ========================================= HOTDOGS =========================================\r\nconst getAllHotdogs = async () => {\r\n    try {\r\n        let res = await hotdogs.all();\r\n        return res;\r\n    } catch(e) {\r\n        // console.log(\"database: \" + e);\r\n        return [];\r\n    }\r\n}\r\n\r\nconst getHotdogsCreatedBy = async (id) => {\r\n    try {\r\n        let res = await hotdogs.getCreatedBy(id);\r\n        return res;\r\n    } catch(e) {\r\n        // console.log(\"database: \" + e);\r\n        return [];\r\n    }\r\n}\r\n\r\nconst getHotdogsCreatedByQuery = async (id) => {\r\n    let query = await hotdogs.getCreatedByQuery(id);\r\n    return query;\r\n}\r\n\r\nconst addHotdog = async (hotdog) => {\r\n    try {\r\n        let hotdogId = await hotdogs.add(hotdog);\r\n        // console.log(\"database: Hotdog with id \" + hotdogId + \" successfully created\");\r\n        return true;\r\n    } catch(e) {\r\n        // console.log(\"database: \" + e);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport {\r\n    login,\r\n    register,\r\n    getUser,\r\n    getAllHotdogs,\r\n    getHotdogsCreatedBy,\r\n    getHotdogsCreatedByQuery,\r\n    addHotdog,\r\n}","import React, { useContext, useState } from 'react';\r\n// email validator\r\nimport isEmail from 'validator/lib/isEmail';\r\n// my components\r\nimport Form from './form';\r\nimport FormField from './formField';\r\nimport FormButton from './formButton';\r\nimport FormFooter from './formFooter';\r\nimport RouterLink from './routerLink';\r\n// routing\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as routes from '../utils/routes';\r\n// context\r\nimport { UserContext } from '../userContext';\r\n// database\r\nimport * as DB from '../database/wrapper';\r\n\r\nfunction LoginForm(props) {\r\n \t// context + state variables (default error \" \" prevents form from looking ugly)\r\n    const { setCurrentUserId, setCurrentUserName } = useContext(UserContext);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [emailError, setEmailError] = useState(\" \");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\" \");\r\n    const [loading, setLoading] = useState(false);\r\n    const emptyError = \"Please fill out this field\";\r\n\r\n    function handleLogin() {\r\n        // setError functions are asynchronous, so use local vars instead for login check\r\n        var emailValid = false;\r\n        var passwordValid = false;\r\n\r\n        // remove trailing whitespace from email before checking validity\r\n        const emailTrimmed = email.trim();\r\n        if (!emailTrimmed) {\r\n            setEmailError(emptyError);\r\n        } else if (!isEmail(emailTrimmed)) {\r\n            setEmailError(\"Invalid email\");\r\n        } else {\r\n            setEmailError(\" \");\r\n            emailValid = true;\r\n        }\r\n        setEmail(emailTrimmed);\r\n\r\n        if (!password) {\r\n            setPasswordError(emptyError);\r\n        } else {\r\n            setPasswordError(\" \");\r\n            passwordValid = true;\r\n        }\r\n\r\n        if (emailValid && passwordValid) {\r\n            setLoading(true);\r\n            // if login succeeds, set context user id and redirect to home page\r\n            (async () => {\r\n                // trim again just in case, since set<value>(<value>Trimmed) is asynchronous\r\n                const loginUserId = await DB.login(email.trim(), password);\r\n                setLoading(false);\r\n                if (!loginUserId) {\r\n                    setEmailError(\"Incorrect email or password\");\r\n                    setPasswordError(\"Incorrect email or password\");\r\n                } else {\r\n                    // get user details (users currently only have a name)\r\n                    const loginUser = await DB.getUser(loginUserId);\r\n                    setCurrentUserName(loginUser.name);\r\n                    setCurrentUserId(loginUserId);\r\n                    props.history.push(routes.HOME);\r\n                }\r\n            })();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <FormField\r\n                type=\"text\"\r\n                iconName=\"email\"\r\n                label=\"Email\"\r\n                value={email}\r\n                setValue={setEmail}\r\n                error={emailError}\r\n            />\r\n            <FormField\r\n                type=\"password\"\r\n                iconName=\"password\"\r\n                label=\"Password\"\r\n                value={password}\r\n                setValue={setPassword}\r\n                error={passwordError}\r\n            />\r\n            <FormButton\r\n                text=\"Login\"\r\n                loading={loading}\r\n                handleClick={handleLogin}\r\n            />\r\n            <FormFooter>\r\n                Don't have an account? <RouterLink color=\"primary\" underline=\"hover\" to={routes.REGISTER}> Sign Up </RouterLink>\r\n            </FormFooter>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default withRouter(LoginForm);","import React from 'react';\r\n// material ui\r\nimport { Box, Button, IconButton, Snackbar, Typography }  from '@material-ui/core';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// routing\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction SuccessSnackbar(props) {\r\n    // snackbar only opens if parent opens it, sets parent val to false if time out\r\n    const { open, setOpen, message, action, actionRoute } = props;\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    }\r\n\r\n    // message with an icon\r\n    const snackbarMessage = (\r\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n            <Box mr={2}>\r\n                <CheckCircleOutlineIcon/>\r\n            </Box>\r\n            <Box>\r\n                <Typography variant=\"subtitle2\" display=\"inline\">\r\n                    {message}\r\n                </Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n\r\n    // main action button + close button - only render action button if action specified\r\n    const snackbarClose = (\r\n        <IconButton size=\"small\" aria-label=\"close\" onClick={handleClose}>\r\n            <CloseIcon color=\"secondary\" fontSize=\"small\"/>\r\n        </IconButton>\r\n    );\r\n    var snackbarAction = snackbarClose;\r\n    if (action) {\r\n        snackbarAction = (\r\n            <div>\r\n                <Button\r\n                    component={Link}\r\n                    to={actionRoute} \r\n                    color=\"secondary\"\r\n                    variant=\"text\" \r\n                    disableElevation\r\n                > \r\n                    {action}\r\n                </Button>\r\n                { snackbarClose }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const autoHideDuration = 10000;\r\n    return (\r\n        <Snackbar \r\n            open={open}\r\n            autoHideDuration={autoHideDuration}\r\n            onClose={handleClose}\r\n            message={snackbarMessage}\r\n            action={snackbarAction}\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuccessSnackbar;\r\n","import React, { useState } from 'react';\r\n// email validator\r\nimport isEmail from 'validator/lib/isEmail';\r\n// my components\r\nimport Form from './form';\r\nimport FormField from './formField';\r\nimport FormButton from './formButton';\r\nimport SuccessSnackbar from './successSnackbar';\r\n// routing\r\nimport * as routes from '../utils/routes';\r\n// database\r\nimport * as DB from '../database/wrapper';\r\n\r\nfunction RegisterForm(props) {\r\n \t// state variables\r\n    const [name, setName] = useState(\"\");\r\n    const [nameError, setNameError] = useState(\" \");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [emailError, setEmailError] = useState(\" \");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\" \");\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n    const [passwordConfirmError, setPasswordConfirmError] = useState(\" \");\r\n    const [loading, setLoading] = useState(false);\r\n    const [registered, setRegistered] = useState(false);\r\n    const emptyError = \"Please fill out this field\";\r\n\r\n    function handleRegister() {\r\n        // set added to false again to handle consecutive adds on same page (no reload)\r\n        setRegistered(false);\r\n        // setError functions are asynchronous, so use local vars instead for final check\r\n        var nameValid = false;\r\n        var emailValid = false;\r\n        var passwordValid = false;\r\n        var passwordConfirmValid = false;\r\n\r\n        // remove trailing whitespace before checking inputs\r\n        const nameTrimmed = name.trim();\r\n        if (!nameTrimmed) {\r\n            setNameError(emptyError);\r\n        } else {\r\n            setNameError(\" \");\r\n            nameValid = true;\r\n        }\r\n        setName(nameTrimmed);\r\n\r\n        const emailTrimmed = email.trim();\r\n        if (!emailTrimmed) {\r\n            setEmailError(emptyError);\r\n        } else if (!isEmail(emailTrimmed)) {\r\n            setEmailError(\"Invalid email\");\r\n        } else {\r\n            setEmailError(\" \");\r\n            emailValid = true;\r\n        }\r\n        setEmail(emailTrimmed);\r\n\r\n        const passwordLength = 6;\r\n        if (!password) {\r\n            setPasswordError(emptyError);\r\n        } else if (password.length < passwordLength) {\r\n            setPasswordError(\"Password must be at least \" + passwordLength + \" characters long\")\r\n        } else {\r\n            setPasswordError(\" \");\r\n            passwordValid = true;\r\n        }\r\n\r\n        if (passwordConfirm !== password) {\r\n            setPasswordConfirmError(\"Please make sure your passwords match\");\r\n        } else {\r\n            setPasswordConfirmError(\" \");\r\n            passwordConfirmValid = true;\r\n        }\r\n\r\n        if (nameValid && emailValid && passwordValid && passwordConfirmValid) {\r\n            setLoading(true);\r\n            (async () => {\r\n                // trim again just in case, since set<value>(<value>Trimmed) is asynchronous\r\n                // TEMP: stop new registrations since public hosting now\r\n                // var registerStatus = await DB.register(name.trim(), email.trim(), password);\r\n                var registerStatus = false;\r\n                setLoading(false);\r\n                // if register succeeds, reset all fields and give user option to go to login \r\n                if (!registerStatus) {\r\n                    // setEmailError(\"Email already in use, please type in a different email\");\r\n                    setEmailError(\"Invalid email\");\r\n                } else {\r\n                    setName(\"\");\r\n                    setEmail(\"\");\r\n                    setPassword(\"\");\r\n                    setPasswordConfirm(\"\");\r\n                    setRegistered(true);                        \r\n                }\r\n            })();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <FormField\r\n                type=\"text\"\r\n                iconName=\"user\"\r\n                label=\"Name\"\r\n                value={name}\r\n                setValue={setName}\r\n                error={nameError}\r\n            />\r\n            <FormField\r\n                type=\"text\"\r\n                iconName=\"email\"\r\n                label=\"Email\"\r\n                value={email}\r\n                setValue={setEmail}\r\n                error={emailError}\r\n            />\r\n            <FormField\r\n                type=\"password\"\r\n                iconName=\"password\"\r\n                label=\"Password\"\r\n                value={password}\r\n                setValue={setPassword}\r\n                error={passwordError}\r\n            />\r\n            <FormField\r\n                type=\"password\"\r\n                iconName=\"passwordConfirm\"\r\n                label=\"Confirm Password\"\r\n                value={passwordConfirm}\r\n                setValue={setPasswordConfirm}\r\n                error={passwordConfirmError}\r\n            />\r\n            <FormButton\r\n                text=\"Register\"\r\n                loading={loading}\r\n                handleClick={handleRegister}\r\n            />\r\n            <SuccessSnackbar\r\n                open={registered}\r\n                setOpen={setRegistered}\r\n                message=\"Registration successful\"\r\n                action=\"LOGIN\"\r\n                actionRoute={routes.LOGIN}\r\n            />\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default RegisterForm;","import React from 'react';\r\nimport { \r\n    Avatar, \r\n    IconButton, \r\n    Card, CardHeader, CardMedia, CardContent, CardActions, \r\n    List, ListItem, ListItemIcon, ListItemText, ListSubheader\r\n} from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport OutdoorGrillIcon from '@material-ui/icons/OutdoorGrill';\r\nimport WavesIcon from '@material-ui/icons/Waves';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\n\r\nfunction HotdogCard(props) {\r\n    const { id, title, ingredients, creatorName, ts } = props;\r\n\r\n    // format timestamp seconds to readable date\r\n    var date = new Date(1970, 0, 1);\r\n    date.setTime(ts * 1000);\r\n    const subheader = date.getDate() + \" \" + (date.toLocaleString('default', {month: 'long'})) + \", \" + date.getFullYear();\r\n\r\n    // letter avatar based on creator's name\r\n    const avatar = (\r\n        <Avatar>\r\n            {creatorName.charAt(0).toUpperCase()}\r\n        </Avatar>\r\n    ); \r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                avatar={avatar}\r\n                title={title + \" by \" + creatorName}\r\n                subheader={subheader}\r\n            />\r\n            <CardMedia image=\"https://www.svgrepo.com/show/133687/hot-dog.svg\"/>\r\n            <CardContent>\r\n                <List dense disablePadding subheader={<ListSubheader color=\"primary\"> Ingredients </ListSubheader>}>\r\n                    <ListItem divider>\r\n                        <ListItemIcon>\r\n                            <OutdoorGrillIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={ingredients[\"sausage\"]}/>\r\n                    </ListItem>\r\n                    <ListItem divider>\r\n                        <ListItemIcon>\r\n                            <WavesIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={ingredients[\"sauce\"]}/>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemIcon>\r\n                            <ShoppingCartIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={ingredients[\"toppingA\"]}/>\r\n                    </ListItem>\r\n                    <ListItem divider>\r\n                        <ListItemText inset primary={ingredients[\"toppingB\"]}/>\r\n                    </ListItem>\r\n                </List>\r\n            </CardContent>\r\n            <CardActions>\r\n                <IconButton>\r\n                    <FavoriteIcon/>\r\n                </IconButton>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default HotdogCard;","import React, { useContext, useState } from 'react';\r\n// my components\r\nimport Form from './form';\r\nimport FormField from './formField';\r\nimport FormButton from './formButton';\r\nimport SuccessSnackbar from './successSnackbar';\r\n// context\r\nimport { UserContext } from '../userContext';\r\n// database\r\nimport * as DB from '../database/wrapper';\r\n\r\n\r\n// helper: trims form input and checks validity (no special characters)\r\nfunction isValid(input, setInput, setInputError) {\r\n    var inputValid = false;\r\n    const emptyError = \"Please fill out this field\";\r\n    const invalidError = \"Invalid input - special characters not allowed\";\r\n\r\n    const inputTrimmed = input.trim();\r\n    if (!inputTrimmed) {\r\n        setInputError(emptyError);\r\n    } else if (!inputTrimmed.match(/^[A-Za-z0-9]+$/g)) {\r\n        setInputError(invalidError);\r\n    } else {\r\n        setInputError(\" \");\r\n        inputValid = true;\r\n    }\r\n    setInput(inputTrimmed);\r\n\r\n    return inputValid;\r\n}\r\n\r\nfunction AddForm() {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [titleError, setTitleError] = useState(\" \");\r\n    const [sausage, setSausage] = useState(\"\");\r\n    const [sausageError, setSausageError] = useState(\" \");\r\n    const [sauce, setSauce] = useState(\"\");\r\n    const [sauceError, setSauceError] = useState(\" \");\r\n    const [toppingA, setToppingA] = useState(\"\");\r\n    const [toppingAError, setToppingAError] = useState(\" \");\r\n    const [toppingB, setToppingB] = useState(\"\");\r\n    const [toppingBError, setToppingBError] = useState(\" \");\r\n    \r\n    const { userId, userName } = useContext(UserContext);\r\n    const [loading, setLoading] = useState(false);\r\n    const [added, setAdded] = useState(false);\r\n\r\n    function handleAdd() {\r\n        // set added to false again to handle consecutive adds on same page (no reload)\r\n        setAdded(false);\r\n        var titleValid, sausageValid, sauceValid, toppingAValid, toppingBValid;\r\n        titleValid = sausageValid = sauceValid = toppingAValid = toppingBValid = false;\r\n\r\n        titleValid = isValid(title, setTitle, setTitleError);\r\n        sausageValid = isValid(sausage, setSausage, setSausageError);\r\n        sauceValid = isValid(sauce, setSauce, setSauceError);\r\n        toppingAValid = isValid(toppingA, setToppingA, setToppingAError);\r\n        toppingBValid = isValid(toppingB, setToppingB, setToppingBError);\r\n\r\n        if (titleValid && sausageValid && sauceValid && toppingAValid && toppingBValid) {\r\n            setLoading(true);\r\n            (async () => {\r\n                // trim again just in case, since set<value>(<value>Trimmed) is asynchronous\r\n                const hotdog = {\r\n                    creatorId: userId,\r\n                    creatorName: userName,\r\n                    title: title.trim(),\r\n                    ingredients: {\r\n                        sausage: sausage.trim(),\r\n                        sauce: sauce.trim(),\r\n                        toppingA: toppingA.trim(),\r\n                        toppingB: toppingB.trim(),\r\n                    }\r\n                }\r\n                const addStatus = await DB.addHotdog(hotdog);\r\n                setLoading(false);\r\n\r\n                // if add hotdog succeeds, reset all fields and give user option to go back to homepage \r\n                // no restrictions on field values for now, so shouldn't fail\r\n                if (!addStatus) {\r\n                    console.log(\"addForm.js: something went wrong :(\");\r\n                } else {\r\n                    setTitle(\"\");\r\n                    setSausage(\"\");\r\n                    setSauce(\"\");\r\n                    setToppingA(\"\");\r\n                    setToppingB(\"\");\r\n                    setAdded(true);\r\n                }\r\n            })();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <FormField\r\n                type=\"text\"\r\n                iconName=\"hotdogTitle\"\r\n                label=\"Title\"\r\n                value={title}\r\n                setValue={setTitle}\r\n                error={titleError}\r\n            />\r\n            <FormField\r\n                type=\"text\"\r\n                iconName=\"hotdogSausage\"\r\n                label=\"Sausage\"\r\n                value={sausage}\r\n                setValue={setSausage}\r\n                error={sausageError}\r\n            />\r\n            <FormField\r\n                type=\"text\"\r\n                iconName=\"hotdogSauce\"\r\n                label=\"Sauce\"\r\n                value={sauce}\r\n                setValue={setSauce}\r\n                error={sauceError}\r\n            />\r\n            <FormField\r\n                type=\"text\"\r\n                iconName=\"hotdogTopping\"\r\n                label=\"Topping A\"\r\n                value={toppingA}\r\n                setValue={setToppingA}\r\n                error={toppingAError}\r\n            />\r\n            <FormField\r\n                type=\"text\"\r\n                iconName=\"none\"\r\n                label=\"Topping B\"\r\n                value={toppingB}\r\n                setValue={setToppingB}\r\n                error={toppingBError}\r\n            />\r\n            <FormButton\r\n                text=\"Submit\"\r\n                loading={loading}\r\n                handleClick={handleAdd}\r\n            />\r\n            <SuccessSnackbar\r\n                open={added}\r\n                setOpen={setAdded}\r\n                message=\"Posted new hotdog!\"\r\n            />\r\n        </Form>\r\n    );\r\n} \r\n\r\nexport default AddForm;","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Dialog, DialogContent, DialogContentText, DialogTitle, Fab } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n// my components\r\nimport AddForm from './addForm';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // anchor fab to bottom right of screen\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(4),\r\n        right: theme.spacing(4),\r\n    }\r\n}));\r\n\r\n// Dialog wrapper for AddForm used on home page (HomeHotdogGrid)\r\n// clicking on fab opens the dialog\r\nfunction AddFormDialog() {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    function handleOpen() {\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Fab\r\n                className={classes.fab} \r\n                aria-label=\"Add a hotdog\"\r\n                color=\"primary\"\r\n                onClick={() => handleOpen()}\r\n            >\r\n                <AddIcon color=\"secondary\"/>\r\n            </Fab>\r\n            <Dialog \r\n                fullWidth\r\n                maxWidth=\"xs\"\r\n                open={open}\r\n                onClose={() => handleClose()}\r\n            >\r\n                <DialogTitle> Post a new hotdog </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Type in the details of your new hotdog.\r\n                    </DialogContentText>\r\n                    <AddForm/>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddFormDialog;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Box, Grid, CircularProgress } from '@material-ui/core';\r\nimport { Waypoint } from 'react-waypoint';\r\n// my components\r\nimport HotdogCard from './hotdogCard';\r\nimport AddFormDialog from './addFormDialog';\r\n// context\r\nimport { UserContext } from '../userContext';\r\n// database\r\nimport * as DB from '../database/wrapper';\r\n\r\nfunction HomeHotdogGrid() {\r\n    const { userId } = useContext(UserContext);\r\n    const [hotdogs, setHotdogs] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [hd, setHd] = useState([]);\r\n\r\n    // display hotdogs created by current user (reverse chronology)\r\n    useEffect(() => {\r\n        // console.log(\"CALLED\");\r\n        (async () => {\r\n            let query = await DB.getHotdogsCreatedByQuery(userId);\r\n            // set up snapshot listener\r\n            query.onSnapshot(snapshot => {\r\n                setLoading(true);\r\n                // onSnapshot returns a QuerySnapshot, docChanges gets all items on initial snapshot\r\n                var changes = [];\r\n                var changeType = \"\";\r\n                snapshot.docChanges().forEach(change => {\r\n                    var formattedRow = change.doc.data();\r\n                    formattedRow[\"id\"] = change.doc.id;\r\n                    formattedRow.ts = change.doc.data().ts.seconds;\r\n                    changes.push(formattedRow);\r\n                    changeType = change.type;\r\n                });\r\n                // console.log(\"CHANGES:\");\r\n                // console.log(changes);\r\n                // sort on the first render - only one hotdog added/removed at a time for successive renders\r\n                if (changes.length > 1) {\r\n                    changes.sort((a, b) => {\r\n                        return b.ts - a.ts;\r\n                    });\r\n                }\r\n                // prepend new hotdog(s), or filter out deleted hotdog based on id\r\n                if (changeType === \"added\") {\r\n                    setHotdogs(oldHotdogs => [...changes, ...oldHotdogs]);\r\n                    setHd(oldHotdogs => [...changes, ...oldHotdogs].slice(0, 3));\r\n                } else if (changeType === \"removed\") {\r\n                    setHotdogs(oldHotdogs => oldHotdogs.filter(hotdog => hotdog.id !== changes[0].id))\r\n                }\r\n                setLoading(false);\r\n            });\r\n        })();\r\n    }, [userId]);\r\n\r\n    // adds 3 more items from hotdogs list given index of next hotdog to render\r\n    function fetchMore(last) {\r\n        // console.log(\"LAST: \" + last);\r\n        // prevent overflow if last row of hotdogs\r\n        var numItems = 3;\r\n        if (last + numItems > hotdogs.length) {\r\n            numItems = hotdogs.length - last;\r\n        }\r\n        var next = hotdogs.slice(last, last + numItems);\r\n        // console.log(next);\r\n        setHd(oldHotdogs => [...oldHotdogs, ...next]);\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n        >\r\n            { loading && \r\n                <CircularProgress color=\"primary\" size={100}/>\r\n            }\r\n            { !loading && \r\n                <Grid container spacing={3}>\r\n                    { hd.map((hotdog, i) => (\r\n                        <Grid item key={hotdog.id} xs={4}>\r\n                            { (i+1) % 3 === 0 && \r\n                              hd.length < hotdogs.length &&\r\n                                <Waypoint onEnter={() => fetchMore(i+1)} />\r\n                            }\r\n                            <HotdogCard\r\n                                id={hotdog.id}\r\n                                title={hotdog.title}\r\n                                ingredients={hotdog.ingredients}\r\n                                creatorName={hotdog.creatorName}\r\n                                ts={hotdog.ts}\r\n                            />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            }\r\n            <AddFormDialog/>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default HomeHotdogGrid;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Button, Container, Typography } from '@material-ui/core';\r\n// routing\r\nimport * as routes from '../utils/routes';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// get background image from cloudinary (pre-faded)\r\nconst backgroundImage = \"https://res.cloudinary.com/noctisvirtus/image/upload/b_rgb:000000,o_15/v1590981061/hotdog_b.jpg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        backgroundImage: `url(${backgroundImage})`,\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        height: '100%',\r\n    },\r\n    // make box full height to vertically centre children\r\n    wrapper: {\r\n        height: '100%',\r\n    },\r\n    // rest of styling copy-pasted from template\r\n    button: {\r\n      minWidth: '200px'\r\n    },\r\n    span: {\r\n        width: '73px',\r\n        height: '4px',\r\n        marginTop: '8px',\r\n        marginRight: 'auto',\r\n        marginBottom: '0px',\r\n        marginLeft: 'auto',\r\n        display: 'block',\r\n        backgroundColor: '#cbb09c'\r\n    },\r\n    // last line changes behaviour when window larger than certain size ('sm')\r\n    message: {\r\n        marginTop: theme.spacing(4),\r\n        marginBottom: theme.spacing(4),\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginTop: theme.spacing(10),\r\n        }\r\n    }\r\n}));\r\n\r\n\r\n// template preview: https://material-ui.com/premium-themes/onepirate/\r\n// template source: https://github.com/mui-org/material-ui/blob/master/docs/src/pages/premium-themes/onepirate/Home.js\r\nfunction Landing() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Container maxWidth={false} className={classes.background}>\r\n            <Box\r\n                className={classes.wrapper}\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                justifyContent=\"center\"\r\n            >\r\n                <Typography align=\"center\" color=\"secondary\" variant=\"h2\">\r\n                    EXPRESS YOUR TASTE\r\n                    <span className={classes.span}></span>\r\n                </Typography>\r\n                <Typography\r\n                    className={classes.message}\r\n                    align=\"center\" \r\n                    color=\"secondary\" \r\n                    variant=\"body1\"\r\n                >\r\n                    Discover secret hotdog recipes from people across the world\r\n                </Typography>\r\n                <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\r\n                    <Button\r\n                        component={Link}\r\n                        to={routes.REGISTER}\r\n                        className={classes.button}\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        size=\"large\"\r\n                        disableElevation\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Landing;\r\n","import React, { useContext } from 'react';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport { HomeHotdogGrid, Landing, PageTitle } from '../components'; \r\n// context\r\nimport { UserContext } from '../userContext';\r\n\r\n// if not logged in, show welcome page; show hotdog grid otherwise\r\nfunction Home() {\r\n    const { userId } = useContext(UserContext);\r\n    if (!userId) {\r\n        return (\r\n            <Landing/>\r\n        );\r\n    } else if (userId) {\r\n        return (\r\n            <Container maxWidth=\"md\">\r\n                <Box display=\"flex\" flexDirection=\"column\" height=\"100%\">\r\n                    <Box p={2} display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\r\n                        <PageTitle text=\"Your Hotdogs\"/>\r\n                    </Box>\r\n                    <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" flexGrow={1} width=\"100%\">\r\n                        <HomeHotdogGrid/>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { useContext } from 'react';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport { LoginForm, PageTitle } from '../components';\r\n// routing\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as routes from '../utils/routes';\r\n// context\r\nimport { UserContext } from '../userContext';\r\n\r\nfunction Login() {\r\n\t// redirect to home page if user already logged in\r\n    const { userId } = useContext(UserContext);\r\n    if (userId) {\r\n        return (\r\n            <Redirect to={routes.HOME}/>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"xs\">\r\n            <Box p={2}>\r\n                <PageTitle text=\"Login\"/>\r\n            </Box>\r\n            <LoginForm/>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport { RegisterForm, PageTitle } from '../components';\r\n\r\nfunction Register() {\r\n    return (\r\n        <Container maxWidth=\"xs\">\r\n            <Box p={2}>\r\n                <PageTitle text=\"Sign Up\"/>\r\n            </Box>\r\n            <RegisterForm/>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\n// material ui\nimport Box from '@material-ui/core/Box';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n// routing\nimport { Switch, Route } from 'react-router-dom';\nimport * as routes from './utils/routes';\n// context\nimport { UserContextProvider } from './userContext';\n// my components/pages\nimport brandTheme from './utils/theme';\nimport { NavBar } from './components';\nimport { Home, Login, Register } from './pages';\n\nconst theme = createMuiTheme(brandTheme);\n\nfunction App() {\n    return (\n        <UserContextProvider>\n            <ThemeProvider theme={theme}>\n                <Box display=\"flex\" flexDirection=\"column\" height=\"100%\">\n                    <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\n                        <NavBar/>\n                    </Box>\n                    <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" flexGrow={1} width=\"100%\">\n                        <Switch>\n                            <Route exact path={routes.HOME} component={Home}></Route>\n                            <Route exact path={routes.LOGIN} component={Login}></Route>\n                            <Route exact path={routes.REGISTER} component={Register}></Route>\n                        </Switch>\n                    </Box>\n                </Box>\n            </ThemeProvider>\n        </UserContextProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <React.Fragment>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.Fragment>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}