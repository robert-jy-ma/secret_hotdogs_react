{"version":3,"sources":["utils/routes.js","userContext.js","utils/theme.js","components/landing.js","components/form.js","utils/icons.js","components/formField.js","components/formButtonWrapper.js","components/progressButton.js","components/formMessage.js","components/routerLink.js","utils/errors.js","database/database/config.js","database/database/hotdogs.js","database/database/users.js","database/wrapper.js","components/loginForm.js","database/database/index.js","components/loginFormDialog.js","components/imageButton.js","utils/constants.js","components/photoUploadDialog.js","components/navbarMenu.js","components/navbar.js","components/pageTitle.js","components/successSnackbar.js","components/registerForm.js","components/hotdogIngredientsList.js","utils/functions.js","components/hotdogCard.js","components/imageButtonDouble.js","components/hotdogForm.js","components/hotdogFormDialog.js","components/hotdogDetailsDialog.js","components/hotdogGrid.js","pages/home.js","pages/register.js","App.js","serviceWorker.js","index.js"],"names":["HOME","REGISTER","UserContext","React","createContext","UserContextProvider","props","useState","userId","setUserId","useEffect","id","sessionStorage","getItem","removeItem","setItem","Provider","value","setCurrentUserId","children","theme","palette","primary","main","secondary","text","typography","fontFamily","join","overrides","MuiAppBar","colorPrimary","backgroundColor","MuiButton","root","textTransform","containedPrimary","color","containedSecondary","textPrimary","textSecondary","MuiCard","MuiCardMedia","height","paddingTop","MuiCardContent","MuiDialog","paperWidthXs","maxWidth","paperWidthMd","paperWidthLg","MuiDialogContent","padding","MuiDialogActions","justifyContent","MuiDialogContentText","marginBottom","MuiIconButton","MuiInputLabel","fontSize","MuiListItem","MuiPopover","paper","minWidth","MuiSnackbarContent","useStyles","makeStyles","background","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","wrapper","button","span","width","marginTop","marginRight","marginLeft","display","message","spacing","breakpoints","up","Landing","classes","Container","className","Box","flexDirection","Typography","align","variant","Button","component","Link","to","routes","size","disableElevation","Form","topPadding","bgcolor","alignItems","p","undefined","icons","user","AccountCircleIcon","email","EmailIcon","password","LockIcon","hotdogTitle","RestaurantIcon","hotdogDescription","EditIcon","hotdogSausage","OutdoorGrillIcon","hotdogSauce","WavesIcon","hotdogTopping","ShoppingCartIcon","none","like","FavoriteIcon","minus","RemoveIcon","plus","AddIcon","close","CloseIcon","tick","CheckCircleOutlineIcon","addTopping","AddShoppingCartIcon","addToppingDisabled","RemoveShoppingCartIcon","camera","PhotoCameraOutlinedIcon","logout","ExitToAppIcon","delete","DeleteIcon","settings","SettingsIcon","edit","Icon","name","style","iconStyle","FormField","type","iconName","label","setValue","error","multiline","disabled","topping","toppingKey","toppingRemove","mr","flexGrow","TextField","onChange","event","val","target","trim","helperText","fullWidth","IconButton","onClick","FormButtonWrapper","position","buttonSpinner","top","left","ProgressButton","disableRipple","loading","handleClick","CircularProgress","FormMessage","RouterLink","underline","LinkBase","errors","empty","special","length","passwordConfirm","login","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","del","a","firebase","firestore","collection","doc","deleteImage","storage","ref","child","get","Promise","resolve","reject","then","snapshot","h","data","ts","seconds","catch","err","getQuery","getWithSnapshot","getAll","hotdogs","forEach","row","formattedRow","push","getCreatedBy","where","getImage","storageRef","getDownloadURL","getNextQuery","n","orderBy","limit","patch","hotdog","i","description","sauce","sausage","toppings","title","ingredients","j","Object","keys","set","merge","post","creatorId","Timestamp","now","add","postImage","image","put","putImage","imageRef","url","auth","signInWithEmailAndPassword","credential","uid","createUserWithEmailAndPassword","users","getUser","getUserImage","postUser","postUserImage","putUserImage","deleteHotdog","deleteHotdogImage","getHotdog","getHotdogQuery","getHotdogWithSnapshot","getHotdogImage","patchHotdog","postHotdog","postHotdogImage","putHotdogImage","isValid","input","setInput","setInputError","trimmed","inputTrimmed","isEmail","checkInput","withRouter","setDialogOpen","useContext","setEmail","emailError","setEmailError","setPassword","passwordError","setPasswordError","setLoading","handleDialogClose","emailValid","passwordValid","DB","history","paddingLeft","dialogContent","paddingRight","LoginFormDialog","open","setOpen","handleClose","Dialog","onClose","DialogContent","navButton","paddingBottom","hotdogImage","avatarImage","navImage","icon","navIcon","hover","ImageButton","imageUrl","iconSize","avatar","navbar","setHover","Image","Avatar","onMouseEnter","onMouseLeave","src","constants","hotdogImageUrl","maxToppings","maxHotdogColumns","borderBottom","borderTop","container","overflow","preview","dropzone","outline","boxSizing","border","transition","accept","cropper","cropperImageHeader","textOverflow","PhotoUploadDialog","setPhoto","photoUrl","setPhotoUrl","profile","confirmRequired","confirmLoading","uploadError","setUploadError","imageName","setImageName","cropperImage","setCropperImage","setCropper","cropperData","setCropperData","confirmActive","setConfirmActive","localPhoto","setLocalPhoto","localPhotoUrl","setLocalPhotoUrl","ms","setTimeout","onDrop","files","file","reader","FileReader","readAsDataURL","onload","result","getRootProps","getInputProps","isDragActive","isDragAccept","aspectRatio","viewMode","center","minCropBoxHeight","minCropBoxWidth","responsive","autoCropArea","checkOrientation","zoomable","toggleDragModeOnDblclick","onInitialized","instance","DialogActions","getCroppedCanvas","fillColor","maxHeight","toBlob","blob","getData","opacity","menuAvatar","menuAvatarBadge","boxShadow","menuHeader","backgroundClip","menuHeaderItem","menuButton","NavbarMenu","userName","userImageUrl","setUserImageUrl","handleLogout","anchor","setAnchor","openPhotoDialog","setOpenPhotoDialog","newImage","setNewImage","newImageUrl","setNewImageUrl","currentTarget","Menu","Boolean","anchorEl","menu","getContentAnchorEl","keepMounted","anchorOrigin","vertical","horizontal","transformOrigin","Badge","overlap","badgeContent","startIcon","openLoginDialog","setOpenLoginDialog","setUserName","AppBar","elevation","Toolbar","PageTitle","Message","Action","actionButton","SuccessSnackbar","action","reason","Snackbar","autoHideDuration","match","RegisterForm","setName","nameError","setNameError","setPasswordConfirm","passwordConfirmError","setPasswordConfirmError","registered","setRegistered","setImage","setImageUrl","nameValid","passwordConfirmValid","registerSuccess","bottomDivider","Topping","index","firstColumn","ListItem","ListItemIcon","ListItemText","inset","disableTypography","HotdogIngredientsList","dialog","numRows","numColumns","Math","max","ceil","numDisplay","toppingsDisplay","slice","numBlank","List","dense","disablePadding","subheader","ListSubheader","divider","Grid","Array","map","e","item","key","xs","secondsToDate","s","date","Date","setTime","getDate","toLocaleString","month","getFullYear","HotdogCard","memo","creatorName","creatorImageUrl","setHotdogDetailsId","setOpenDetailsDialog","setDeleteId","Card","CardHeader","CardMedia","CardContent","CardActions","aria-label","iconWrapper","cursor","ImageButtonDouble","iconNameOne","iconNameTwo","handleClickOne","handleClickTwo","alt","isValidTopping","updateToppings","updateToppingErrors","HotdogForm","initialDescription","initialHotdogImageUrl","initialIngredients","initialTitle","setDialogHotdogImageUrl","setAddId","setEditId","openSnackbar","setOpenSnackbar","setTitle","setDescription","setSausage","setSauce","titleError","setTitleError","descriptionError","sausageError","setSausageError","sauceError","setSauceError","setHotdogImage","setHotdogImageUrl","initialToppings","t","initialToppingErrors","Map","setToppings","toppingErrors","setToppingErrors","handleRemoveTopping","toppingId","removeTopping","removeToppingError","photoType","uuidv4","handleAddTopping","titleValid","sausageValid","sauceValid","toppingsValid","toppingsArray","values","initial","changes","res","k","isEqual","sort","removeMatching","editSuccess","isEmpty","finalUrl","addSuccess","HotdogFormDialog","dialogHotdogImageUrl","buttonBase","cardWrapper","cardIcon","card","cardContent","grid","comments","HotdogDetailsDialog","setCreatorName","setIngredients","setSubheader","setCreatorImageUrl","openForm","setOpenForm","unsubscribe","setUnsubscribe","hotdogInitial","hotdogUrl","creatorUrl","creator","listener","onSnapshot","ButtonBase","square","Paper","direction","cardOverlay","zIndex","borderRadius","animation","fab","bottom","right","progressWrapper","progress","endTextWrapper","lineHeight","endText","fullHeight","getImages","hd","all","HomeHotdogGrid","setHotdogs","openAddDialog","setOpenAddDialog","hotdogDetailsId","openDetailsDialog","fetchCount","setFetchCount","lastSnapshot","setLastSnapshot","fetchLoading","setFetchLoading","addId","addLoading","setAddLoading","editId","deleteId","fetchMore","q","startAfter","query","next","current","previousSnapshot","filter","LinearProgress","handleCardHover","onEnter","Fab","Home","Register","createMuiTheme","brandTheme","App","ThemeProvider","exact","path","isLocalhost","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","ReactDOM","render","Fragment","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1f63c6f6.chunk.js","sourcesContent":["export const HOME = '/';\r\nexport const ADD = '/add';\r\nexport const LOGIN = '/login';\r\nexport const REGISTER = '/register';\r\nexport const DETAILS = '/details';\r\nexport const SEARCH = '/search';","import React, { useEffect, useState } from 'react';\r\n\r\n// note: https://stackoverflow.com/questions/54738681/how-to-change-context-value-while-using-react-hook-of-usecontext\r\n// Provider is still needed to wrap around App.js\r\n// if no provider is given, then useContext will simply take the default value of createContext() \r\n// rather than the current value\r\n\r\n// import UserContext inside a child component\r\nconst UserContext = React.createContext();\r\n\r\n// import UserContextProvider wrapper in App.js (parent)\r\nfunction UserContextProvider(props) {\r\n    const [userId, setUserId] = useState(null);\r\n\r\n    function setCurrentUserId(id) {\r\n        setUserId(userId => id);\r\n    }\r\n    \r\n    // persist context if page refreshes/rerouted to different page\r\n    useEffect(() => {\r\n        const id = sessionStorage.getItem('userId');\r\n        setUserId(id);\r\n    }, []);\r\n\r\n    // save context to session whenever variable changes, remove if set to null\r\n    useEffect(() => {\r\n        if (userId === null) {\r\n            sessionStorage.removeItem('userId');\r\n        } else {\r\n            sessionStorage.setItem('userId', userId);\r\n        }\r\n    }, [userId]);\r\n\r\n    return (\r\n        <UserContext.Provider value={{ userId, setCurrentUserId }}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    );\r\n}\r\n\r\nexport {\r\n    UserContext,\r\n    UserContextProvider,\r\n}\r\n","const theme = {\r\n\tpalette: {\r\n        primary: {\r\n            main: '#cbb09c'\r\n        },\r\n        secondary: {\r\n            main: '#ffffff'\r\n        },\r\n        text: {\r\n            primary: '#212121',\r\n            secondary: '#9e9e9e',\r\n        },\r\n    },\r\n    // closer to materialize's font (looks nicer than material-ui)\r\n    typography: {\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n    },\r\n    overrides: {\r\n        // appbar color same as text.primary\r\n        MuiAppBar: {\r\n            colorPrimary: {\r\n                backgroundColor: '#212121',\r\n            }\r\n        },\r\n        MuiButton: {\r\n            root: {\r\n                textTransform: 'none'\r\n            },\r\n            // white button text - contained Button \"color\" material ui attribute only changes background color\r\n            containedPrimary: {\r\n                color: '#ffffff'\r\n            },\r\n            // override white background + default black text color\r\n            containedSecondary: {\r\n                color: 'rgba(0, 0, 0, 0.54)',\r\n                backgroundColor: '#e0e0e0'\r\n            },\r\n            // change color from lighter text.primary to primary.main, remove text transformation\r\n            textPrimary: {\r\n                color: 'rgba(0, 0, 0, 0.54)',\r\n                '&:hover': {\r\n                    color: '#cbb09c',\r\n                    backgroundColor: 'transparent'\r\n                }\r\n            },\r\n            // change color from secondary to primary on hover, and remove the button outline effect\r\n            textSecondary: {\r\n                '&:hover': {\r\n                    color: '#cbb09c',\r\n                    backgroundColor: 'transparent'\r\n                }\r\n            }\r\n        },\r\n        // hotdog grid item size\r\n        MuiCard: {\r\n            root: {\r\n                // maxWidth: 300,\r\n            }\r\n        },\r\n        // height has to be specified for cardmedia, otherwise image invisible\r\n        MuiCardMedia: {\r\n            root: {\r\n                height: 0,\r\n                paddingTop: '100%',\r\n            }\r\n        },\r\n        // disable padding between bottom of image and ingredients list\r\n        MuiCardContent: {\r\n            root: {\r\n                paddingTop: 'unset'\r\n            }\r\n        },\r\n        // smaller than default maxWidth for a dialog with maxWidth=\"xs\"|\"md\"\r\n        MuiDialog: {\r\n            paperWidthXs: {\r\n                maxWidth: '400px'\r\n            },\r\n            paperWidthMd: {\r\n                maxWidth: '750px'\r\n            },\r\n            paperWidthLg: {\r\n                maxWidth: '950px'\r\n            }\r\n        },\r\n        // unset excessive padding in dialog content\r\n        MuiDialogContent: {\r\n            root: {\r\n                paddingTop: 'unset!important',\r\n                padding: 'unset!important'\r\n            }\r\n        },\r\n        // move dialog buttons to left instead of right (only used in photoUploadDialog for now)\r\n        MuiDialogActions: {\r\n            root: {\r\n                justifyContent: 'flex-start'\r\n            }\r\n        },\r\n        // remove margin from dialogcontenttext\r\n        MuiDialogContentText: {\r\n            root: {\r\n                marginBottom: 0\r\n            }\r\n        },\r\n        // remove hover ripple around iconbuttons, default color on hover same as primary\r\n        MuiIconButton: {\r\n            root: {\r\n                '&:hover': {\r\n                    backgroundColor: 'transparent',\r\n                    color: '#cbb09c'\r\n                },\r\n            }\r\n        },\r\n        // font size for a TextField label\r\n        MuiInputLabel: {\r\n            root: {\r\n                fontSize: 14\r\n            }\r\n        },\r\n        // capitalize ListItemText (hotdog card ingredients list)\r\n        MuiListItem: {\r\n            root: {\r\n                textTransform: 'capitalize'\r\n            }, \r\n        },\r\n        // avatar menu minimum width\r\n        MuiPopover: {\r\n            paper: {\r\n                minWidth: 150\r\n            }\r\n        },\r\n        // background color for a Snackbar\r\n        MuiSnackbarContent: {\r\n            root: {\r\n                backgroundColor: '#00e676'\r\n                // backgroundColor: '#00c853'\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\nexport default theme;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Button, Container, Typography } from '@material-ui/core';\r\n// routing\r\nimport * as routes from '../utils/routes';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// get background image from cloudinary (pre-faded)\r\nconst backgroundImage = \"https://res.cloudinary.com/noctisvirtus/image/upload/b_rgb:000000,o_15/v1590981061/hotdog_b.jpg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        backgroundImage: `url(${backgroundImage})`,\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        height: '100%',\r\n    },\r\n    // make box full height to vertically centre children\r\n    wrapper: {\r\n        height: '100%',\r\n    },\r\n    // rest of styling copy-pasted from template\r\n    button: {\r\n      minWidth: '200px'\r\n    },\r\n    span: {\r\n        width: '73px',\r\n        height: '4px',\r\n        marginTop: '8px',\r\n        marginRight: 'auto',\r\n        marginBottom: '0px',\r\n        marginLeft: 'auto',\r\n        display: 'block',\r\n        backgroundColor: '#cbb09c'\r\n    },\r\n    // last line changes behaviour when window larger than certain size ('sm')\r\n    message: {\r\n        marginTop: theme.spacing(4),\r\n        marginBottom: theme.spacing(4),\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginTop: theme.spacing(10),\r\n        }\r\n    }\r\n}));\r\n\r\n\r\n// template preview: https://material-ui.com/premium-themes/onepirate/\r\n// template source: https://github.com/mui-org/material-ui/blob/master/docs/src/pages/premium-themes/onepirate/Home.js\r\nfunction Landing() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Container maxWidth={false} className={classes.background}>\r\n            <Box\r\n                className={classes.wrapper}\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                justifyContent=\"center\"\r\n            >\r\n                <Typography align=\"center\" color=\"secondary\" variant=\"h2\">\r\n                    EXPRESS YOUR TASTE\r\n                    <span className={classes.span}></span>\r\n                </Typography>\r\n                <Typography\r\n                    className={classes.message}\r\n                    align=\"center\" \r\n                    color=\"secondary\" \r\n                    variant=\"body1\"\r\n                >\r\n                    Discover secret hotdog recipes from people across the world\r\n                </Typography>\r\n                <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\r\n                    <Button\r\n                        component={Link}\r\n                        to={routes.REGISTER}\r\n                        className={classes.button}\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        size=\"large\"\r\n                        disableElevation\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    padding: {\r\n        paddingTop: 'unset'\r\n    }\r\n}));\r\n\r\n// Wrapper for all forms, optional no top padding (for loginform/loginformdialog)\r\nfunction Form(props) {\r\n    const classes = useStyles();\r\n    const { topPadding } = props;\r\n\r\n    return (\r\n        <Box \r\n            bgcolor=\"secondary.main\"\r\n            display=\"flex\" \r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            p={2}\r\n            className={topPadding ? undefined : classes.padding}\r\n        >\r\n            {props.children}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport OutdoorGrillIcon from '@material-ui/icons/OutdoorGrill';\r\nimport WavesIcon from '@material-ui/icons/Waves';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport RemoveShoppingCartIcon from '@material-ui/icons/RemoveShoppingCart';\r\nimport PhotoCameraOutlinedIcon from '@material-ui/icons/PhotoCameraOutlined';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\n// \"none\" = transparent with ShoppingCartIcon as a placeholder\r\nconst icons = {\r\n    user: AccountCircleIcon,\r\n    email: EmailIcon,\r\n    password: LockIcon,\r\n    hotdogTitle: RestaurantIcon,\r\n    hotdogDescription: EditIcon,\r\n    hotdogSausage: OutdoorGrillIcon,\r\n    hotdogSauce: WavesIcon,\r\n    hotdogTopping: ShoppingCartIcon,\r\n    none: ShoppingCartIcon,\r\n    like: FavoriteIcon,\r\n    minus: RemoveIcon,\r\n    plus: AddIcon,\r\n    close: CloseIcon,\r\n    tick: CheckCircleOutlineIcon,\r\n    addTopping: AddShoppingCartIcon,\r\n    addToppingDisabled: RemoveShoppingCartIcon,\r\n    camera: PhotoCameraOutlinedIcon,\r\n    logout: ExitToAppIcon,\r\n    delete: DeleteIcon,\r\n    settings: SettingsIcon,\r\n    edit: EditIcon,\r\n}\r\n\r\nfunction Icon(props) {\r\n    const { name, size, color, className, style } = props;\r\n    const Icon = icons[name];\r\n    var iconStyle = name === \"none\" ? { color: 'transparent' } : style;\r\n    return <Icon fontSize={size} color={color} className={className} style={iconStyle} />;\r\n}\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\nimport { Box, IconButton, TextField } from '@material-ui/core';\r\nimport Icon from '../utils/icons';\r\n\r\n/* \r\n    Text field with icon - to be wrapped in a Form\r\n    To display errors correctly, set error as \" \" if there is no error\r\n    If formfield used for description, textfield becomes multiline\r\n    If FormField used for a topping, adds a remove topping button, and setValue function takes in a key\r\n*/\r\nfunction FormField(props) {\r\n    const { \r\n        type, iconName, label, value, setValue, error, multiline, disabled,\r\n        topping, toppingKey, toppingRemove\r\n    } = props;\r\n\r\n    function handleChange(val) {\r\n        topping ? setValue(toppingKey, val) : setValue(val);\r\n    }\r\n\r\n    return (\r\n        <Box width=\"100%\" display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" alignItems=\"center\" p={0.5}>\r\n            <Box mr={0.5}>\r\n                <Icon name={iconName} />\r\n            </Box>\r\n            <Box flexGrow={1} p={1} display=\"flex\" flexDirection=\"row\">\r\n                <Box flexGrow={1}>\r\n                    <TextField\r\n                        label={label}\r\n                        type={type}\r\n                        value={value}\r\n                        onChange={(event) => handleChange(event.target.value)}\r\n                        error={error.trim() !== \"\"}\r\n                        helperText={error}\r\n                        multiline={multiline}\r\n                        disabled={disabled}\r\n                        fullWidth\r\n                    />\r\n                </Box>\r\n                { topping &&\r\n                    <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\r\n                        <IconButton onClick={() => toppingRemove(toppingKey)}>\r\n                            <Icon name=\"minus\" />\r\n                        </IconButton>\r\n                    </Box>\r\n                }\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default FormField;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// Form button wrapper - to be used in a Form\r\nfunction FormButtonWrapper(props) {\r\n\tconst { className, style } = props;\r\n    return (\r\n        <Box display=\"flex\" justifyContent=\"center\" p={1} className={className} style={style}>\r\n            {props.children}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default FormButtonWrapper;\r\n","import React from 'react';\r\nimport { Button, CircularProgress } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// show loading spinner on top of button\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrapper: {\r\n        position: 'relative',\r\n    },\r\n    buttonSpinner: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n}));\r\n\r\nfunction ProgressButton(props) {\r\n    const { \r\n        color, variant, size, disabled, disableRipple, disableElevation, \r\n        loading, handleClick \r\n    } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Button\r\n                color={color} \r\n                variant={variant}\r\n                size={size}\r\n                disabled={disabled || loading}\r\n                disableElevation={disableElevation}\r\n                disableRipple={disableRipple}\r\n                onClick={() => handleClick()}\r\n            >\r\n                {props.children}\r\n            </Button>\r\n            {loading && <CircularProgress size={24} className={classes.buttonSpinner}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProgressButton;","import React from 'react';\r\nimport { Box, Typography } from '@material-ui/core';\r\n\r\n// Typography wrapper for use in Forms\r\nfunction FormMessage(props) {\r\n\tconst { color, variant, style, className } = props;\r\n    return (\r\n        <Box display=\"flex\" justifyContent=\"center\" p={1} style={style} className={className}>\r\n            <Typography color={color} variant={variant}>\r\n                {props.children}\r\n            </Typography>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default FormMessage;","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { Link as LinkBase } from 'react-router-dom';\r\n\r\n/*\r\n    react-router-dom Link with styling options of material-ui Link\r\n    optional additional onclick functionality\r\n*/\r\nfunction RouterLink(props) {\r\n    const { color, underline, onClick, to } = props;\r\n    return (\r\n        <Link\r\n            component={LinkBase}\r\n            color={color}\r\n            underline={underline}\r\n            onClick={onClick ? () => onClick() : undefined }\r\n            to={to}\r\n        >\r\n            {props.children}\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default RouterLink;\r\n","/*\r\n    error messages used in: addForm, loginForm, registerForm\r\n*/\r\nconst errors = {\r\n    empty: \"Please fill out this field\",\r\n    special: \"Special characters not allowed\",\r\n    email: \"Invalid email\",\r\n    password: (length) =>  { return `Password must be at least ${length} characters long` },\r\n    passwordConfirm: \"Passwords do not match\",\r\n    login: \"Incorrect email or password\",\r\n}\r\n\r\nexport default errors;\r\n","const config = {\r\n    apiKey: \"AIzaSyCedmZ8AuayWY5Y5M5nODo1FWMRwsN1gWk\",\r\n    authDomain: \"secret-hotdogs.firebaseapp.com\",\r\n    databaseURL: \"https://secret-hotdogs.firebaseio.com\",\r\n    projectId: \"secret-hotdogs\",\r\n    storageBucket: \"secret-hotdogs.appspot.com\",\r\n    messagingSenderId: \"384829400176\",\r\n    appId: \"1:384829400176:web:f2d1a3a192bbf62063c0b5\"\r\n};\r\n\r\nexport default config;","// imports\r\nimport { firebase } from './index';\r\n\r\n/* \r\n    delete hotdog with given id\r\n*/\r\nasync function del(id) {\r\n    return firebase.firestore().collection('hotdogs').doc(id).delete();\r\n}\r\n\r\n/* \r\n    delete hotdog image with given id\r\n*/\r\nasync function deleteImage(id) {\r\n    return firebase.storage().ref().child(\"hotdogs/\" + id + \".jpg\").delete();\r\n}\r\n\r\n/*\r\n    returns details of hotdog with given id\r\n*/\r\nasync function get(id) {\r\n    return new Promise((resolve, reject) => {\r\n        firebase.firestore().collection('hotdogs').doc(id).get().then(snapshot => {\r\n            let h = snapshot.data();\r\n            h[\"ts\"] = h.ts.seconds;\r\n            resolve(h);\r\n        }).catch(err => {\r\n            reject(err);\r\n        })\r\n    });\r\n}\r\n\r\n/*\r\n    real-time query - used in HotdogDetailsDialog for real-time edits in dialog\r\n*/\r\nfunction getQuery(id) {\r\n    return firebase.firestore().collection('hotdogs').doc(id);\r\n}\r\n\r\n/* \r\n    same as get, but adds snapshot to return value - used in HotdogGrid for fake real-time adding\r\n*/\r\nasync function getWithSnapshot(id) {\r\n    return new Promise((resolve, reject) => {\r\n        firebase.firestore().collection('hotdogs').doc(id).get().then(snapshot => {\r\n            let h = snapshot.data();\r\n            h[\"ts\"] = h.ts.seconds;\r\n            h[\"snapshot\"] = snapshot;\r\n            resolve(h);\r\n        }).catch(err => {\r\n            reject(err);\r\n        })\r\n    });\r\n}\r\n\r\n/* \r\n    return all hotdogs with id and readable timestamps\r\n*/\r\nasync function getAll() {\r\n    return new Promise((resolve, reject) => {\r\n        firebase.firestore().collection('hotdogs').get().then(data => {\r\n            // note: each \"row\" is a \"DocumentSnapshot\": https://firebase.google.com/docs/reference/js/firebase.firestore.DocumentSnapshot\r\n            let hotdogs = [];\r\n            data.forEach(row => {\r\n                // add document id\r\n                let formattedRow = row.data();\r\n                formattedRow[\"id\"] = row.id;\r\n                formattedRow[\"ts\"] = row.data().ts.seconds;\r\n                hotdogs.push(formattedRow);\r\n            });\r\n            resolve(hotdogs);\r\n        }).catch(err => {\r\n            reject(err);\r\n        });\r\n    });\r\n}\r\n\r\n/*\r\n    returns all hotdogs where creator == given user id\r\n*/\r\nasync function getCreatedBy(id) {\r\n    return new Promise((resolve, reject) => {\r\n        firebase.firestore().collection('hotdogs').where(\"creatorId\", \"==\", id).get().then(data => {\r\n            let hotdogs = [];\r\n            data.forEach(row => {\r\n                // add document id\r\n                let formattedRow = row.data();\r\n                formattedRow[\"id\"] = row.id;\r\n                formattedRow[\"ts\"] = row.data().ts.seconds;\r\n                hotdogs.push(formattedRow);\r\n            });\r\n            resolve(hotdogs);\r\n        }).catch(err => {\r\n            reject(err);\r\n        });\r\n    });\r\n}\r\n\r\n/*\r\n    given hotdog id, retrieves image from storage\r\n*/\r\nasync function getImage(id) {\r\n    const storageRef = firebase.storage().ref();\r\n    return storageRef.child(\"hotdogs/\" + id + \".jpg\").getDownloadURL();\r\n}\r\n\r\n/* \r\n    pagination - used in HotdogGrid, get next n hotdogs created by given user\r\n*/\r\nfunction getNextQuery(id, n) {\r\n    return firebase.firestore().collection('hotdogs').where(\"creatorId\", \"==\", id).orderBy(\"ts\", \"desc\").limit(n);\r\n}\r\n\r\n/* \r\n    updates existing hotdog record - does NOT change timestamp \r\n*/\r\nasync function patch(id, hotdog) {\r\n    const { description, sauce, sausage, toppings, title } = hotdog;\r\n    let h = {\r\n        description, \r\n        ingredients: {sauce, sausage, toppings},\r\n        title,\r\n    }\r\n    // remove undefined values before patching\r\n    for (var i in h) {\r\n        if (i !== \"ingredients\" && h[i] === undefined) {\r\n            delete h[i];\r\n        } else if (i === \"ingredients\") {\r\n            for (var j in h[i]) {\r\n                if (h[i][j] === undefined) {\r\n                    delete h[i][j];\r\n                }\r\n            }\r\n            // remove empty ingredients (i.e. \"{}\"), otherwise gets included in patch\r\n            if (Object.keys(h[i]).length === 0) {\r\n                delete h[i];\r\n            }\r\n        }\r\n    }\r\n    return firebase.firestore().collection('hotdogs').doc(id).set(h, {merge: true});\r\n}\r\n\r\n/* \r\n    returns newly created hotdog id if successful\r\n*/\r\nasync function post(hotdog) {\r\n    const { creatorId, description, sauce, sausage, toppings, title } = hotdog;\r\n    let h = {\r\n        creatorId,\r\n        description, \r\n        ingredients: {sauce, sausage, toppings},\r\n        title,\r\n        ts: firebase.firestore.Timestamp.now()\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n        firebase.firestore().collection('hotdogs').add(h).then(data => {\r\n            resolve(data.id);\r\n        }).catch(err => {\r\n            reject(err);\r\n        });\r\n    });\r\n}\r\n\r\n/* \r\n    wrapper.js returns true if new image added successfully\r\n*/\r\nasync function postImage(id, image) {\r\n    return firebase.storage().ref().child(\"hotdogs/\" + id + \".jpg\").put(image);\r\n} \r\n\r\n/* \r\n    replaces or deletes existing image\r\n*/\r\nasync function putImage(id, image) {\r\n    let imageRef = firebase.storage().ref().child(\"hotdogs/\" + id + \".jpg\");\r\n    return new Promise((resolve, reject) => {\r\n        if (image) {\r\n            // console.log(\"image defined - replace existing\");\r\n            imageRef.put(image).then(() => {\r\n                return imageRef.getDownloadURL();\r\n            }).then(url => {\r\n                resolve(url);\r\n            }).catch(err => {\r\n                reject(err);\r\n            })\r\n        } else {\r\n            // console.log(\"image not defined - delete existing\");\r\n            imageRef.delete().then(() => {\r\n                resolve(\"\");\r\n            }).catch(err => {\r\n                reject(err);\r\n            })\r\n        }\r\n    });\r\n} \r\n\r\nexport {\r\n    del,\r\n    deleteImage,\r\n    get,\r\n    getAll,\r\n    getQuery,\r\n    getWithSnapshot,\r\n    getCreatedBy,\r\n    getImage,\r\n    getNextQuery,\r\n    patch,\r\n    post,\r\n    postImage,\r\n    putImage,\r\n}\r\n","// imports\r\nimport { firebase } from './index';\r\n\r\n/*\r\n    return user details if login successful, otherwise return firebase error\r\n    \"credential\" is a UserCredential: https://firebase.google.com/docs/reference/js/firebase.auth#usercredential\r\n*/\r\nasync function login(email, password) {\r\n    return new Promise((resolve, reject) => {\r\n        firebase.auth().signInWithEmailAndPassword(email, password).then(credential => {\r\n            resolve(credential.user.uid);\r\n        }).catch(err => {\r\n            reject(err);\r\n        });\r\n    });\r\n}\r\n\r\n/*  \r\n    get user details given firebase auth id\r\n*/\r\nasync function get(id) {\r\n    return new Promise((resolve, reject) => {\r\n        firebase.firestore().collection('users').doc(id).get().then(snapshot => \r\n            resolve(snapshot.data())\r\n        ).catch(err => \r\n            reject(err)\r\n        );\r\n    });\r\n}\r\n\r\n/*  \r\n    get user profile image url given firebase auth id \r\n    TODO: consider combining this with get user function\r\n*/\r\nasync function getImage(id) {\r\n    var storageRef = firebase.storage().ref();\r\n    return storageRef.child(\"users/\" + id + \".jpg\").getDownloadURL();\r\n}\r\n\r\n/* \r\n    returns user id if registration successful - set name in users collection\r\n*/\r\nasync function post(name, email, password) {\r\n    return new Promise((resolve, reject) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(credential => {\r\n            const id = credential.user.uid;\r\n            firebase.firestore().collection('users').doc(id).set({name: name}).then(() => {\r\n                resolve(id);\r\n            }).catch(err => {\r\n                reject(err);\r\n            });\r\n        }).catch(err => {\r\n            reject(err);\r\n        });\r\n    });\r\n}\r\n\r\n/* \r\n    wrapper.js returns true if new image added successfully\r\n*/\r\nasync function postImage(id, image) {\r\n    return firebase.storage().ref().child(\"users/\" + id + \".jpg\").put(image);\r\n}\r\n\r\n/* \r\n    deletes existing profile image blob record if no profile image, updates image otherwise  \r\n    wrapper.js resolves with storage url if image defined, otherwise it resolves to empty string\r\n*/\r\nasync function putImage(id, image) {\r\n    return new Promise((resolve, reject) => {\r\n        let imageRef = firebase.storage().ref().child(\"users/\" + id + \".jpg\");\r\n        let action = image ? imageRef.put(image) : imageRef.delete();\r\n        action.then(() => {\r\n            return imageRef.getDownloadURL();\r\n        }).then(url => {\r\n            resolve(url);\r\n        }).catch(err => {\r\n            reject(err);\r\n        });\r\n    });   \r\n}\r\n\r\nexport {\r\n    login,\r\n    get,\r\n    getImage,\r\n    post, \r\n    postImage,\r\n    putImage,\r\n}\r\n","// wrapper for database access and error catching\r\n// similar functionality as old server/routes.js\r\nimport { users, hotdogs } from './database';\r\n\r\n// ========================================= USERS ===========================================\r\nasync function login(email, password) {\r\n    try {\r\n        let id = await users.login(email, password);\r\n        return id;\r\n    } catch(e) {\r\n        // console.log(\"database: \" + e);\r\n        return false;\r\n    }\r\n}\r\n\r\nasync function getUser(id) {\r\n    try {\r\n        let user = await users.get(id);\r\n        return user;\r\n    } catch(e) {\r\n        // console.log(\"database: \" + e);\r\n        return false;\r\n    }\r\n}\r\n\r\nasync function getUserImage(id) {\r\n    try {\r\n        let url = await users.getImage(id);\r\n        return url;\r\n    } catch(e) {\r\n        // console.log(\"database: no avatar detected, so set to default avatar (ignore annoying firebase error above)\");\r\n        return \"\";\r\n    }\r\n}\r\n\r\nasync function postUser(name, email, password) {\r\n    try {\r\n        let id = await users.post(name, email, password);\r\n        return id;\r\n    } catch(e) {\r\n        return false;\r\n    }\r\n}\r\n\r\nasync function postUserImage(id, image) {\r\n    try {\r\n        await users.postImage(id, image);\r\n        return true;\r\n    } catch(e) {\r\n        return false;\r\n    }\r\n}\r\n\r\nasync function putUserImage(id, image) {\r\n    try {\r\n        let url = await users.putImage(id, image);\r\n        return url;\r\n    } catch(e) {\r\n        return \"\";\r\n    }\r\n}\r\n\r\n// ========================================= HOTDOGS =========================================\r\nasync function deleteHotdog(id) {\r\n    try {\r\n        await hotdogs.del(id);\r\n        return true;\r\n    } catch(e) {\r\n        return false;\r\n    }\r\n}\r\n\r\nasync function deleteHotdogImage(id) {\r\n    try {\r\n        await hotdogs.deleteImage(id);\r\n        return true;\r\n    } catch(e) {\r\n        return false;\r\n    }\r\n}\r\n\r\nasync function getAllHotdogs() {\r\n    try {\r\n        let res = await hotdogs.getAll();\r\n        return res;\r\n    } catch(e) {\r\n        // console.log(\"database: \" + e);\r\n        return [];\r\n    }\r\n}\r\n\r\nasync function getHotdog(id) {\r\n    try {\r\n        let hotdog = await hotdogs.get(id);\r\n        return hotdog;\r\n    } catch(e) {\r\n        // console.log(e);\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction getHotdogQuery(id) {\r\n    return hotdogs.getQuery(id);\r\n}\r\n\r\nasync function getHotdogWithSnapshot(id) {\r\n    try {\r\n        let hotdog = await hotdogs.getWithSnapshot(id);\r\n        return hotdog;\r\n    } catch(e) {\r\n        // console.log(e);\r\n        return false;\r\n    }\r\n}\r\n\r\nasync function getHotdogImage(id) {\r\n    try {\r\n        let url = await hotdogs.getImage(id);\r\n        return url;\r\n    } catch(e) {\r\n        // console.log(\"no hotdog image detected, set url to empty string\");\r\n        return \"\";\r\n    } \r\n}\r\n\r\nasync function getHotdogsCreatedBy(id) {\r\n    try {\r\n        let res = await hotdogs.getCreatedBy(id);\r\n        return res;\r\n    } catch(e) {\r\n        // console.log(\"database: \" + e);\r\n        return [];\r\n    }\r\n}\r\n\r\nfunction getHotdogsNextQuery(id, n) {\r\n    return hotdogs.getNextQuery(id, n);\r\n}\r\n\r\nasync function patchHotdog(id, hotdog) {\r\n    try {\r\n        await hotdogs.patch(id, hotdog);\r\n        return true;\r\n    } catch(e) {\r\n        // console.log(e);\r\n        return false;\r\n    }\r\n}\r\n\r\nasync function postHotdog(hotdog) {\r\n    try {\r\n        let id = await hotdogs.post(hotdog);\r\n        return id;\r\n    } catch(e) {\r\n        // console.log(e);\r\n        return false;\r\n    }\r\n}\r\n\r\nasync function postHotdogImage(id, image) {\r\n    try {\r\n        await hotdogs.postImage(id, image);\r\n        return true;\r\n    } catch(e) {\r\n        return false;\r\n    }\r\n}\r\n\r\nasync function putHotdogImage(id, image) {\r\n    try {\r\n        let url = await hotdogs.putImage(id, image);\r\n        return url;\r\n    } catch(e) {\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    login,\r\n    getUser,\r\n    getUserImage,\r\n    postUser,\r\n    postUserImage,\r\n    putUserImage,\r\n    deleteHotdog,\r\n    deleteHotdogImage,\r\n    getAllHotdogs,\r\n    getHotdog, \r\n    getHotdogQuery,\r\n    getHotdogWithSnapshot,\r\n    getHotdogImage,\r\n    getHotdogsCreatedBy,\r\n    getHotdogsNextQuery,\r\n    patchHotdog,\r\n    postHotdog,\r\n    postHotdogImage,\r\n    putHotdogImage,\r\n}","import React, { useContext, useState } from 'react';\r\n// email validator\r\nimport isEmail from 'validator/lib/isEmail';\r\n// my components\r\nimport Form from './form';\r\nimport FormField from './formField';\r\nimport FormButtonWrapper from './formButtonWrapper';\r\nimport ProgressButton from './progressButton';\r\nimport FormMessage from './formMessage';\r\nimport RouterLink from './routerLink';\r\n// routing + utils\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as routes from '../utils/routes';\r\nimport errors from '../utils/errors';\r\n// context\r\nimport { UserContext } from '../userContext';\r\n// database\r\nimport * as DB from '../database/wrapper';\r\n\r\n/* \r\n    helper: checks trimmed input, returning the appropriate error message\r\n    only handles email - password error handling done during form submission\r\n*/\r\nfunction checkInput(type, inputTrimmed) {\r\n    if (!inputTrimmed) {\r\n        return errors[\"empty\"];\r\n    }\r\n    var error = \" \";\r\n    if (type === \"email\" && !isEmail(inputTrimmed)) error = errors[\"email\"]\r\n    return error;\r\n}\r\n\r\n/*\r\n    helper: checks validity of input based on returned error, trims input, and sets input error\r\n*/\r\nfunction isValid(type, input, setInput, setInputError) {\r\n    const trimmed = input.trim();\r\n    const error = checkInput(type, trimmed);\r\n    setInput(trimmed);\r\n    setInputError(error);\r\n    return error.trim() === \"\";\r\n}\r\n\r\nfunction LoginForm(props) {\r\n \t// context + state variables (default error \" \" prevents form from looking ugly)\r\n    const { setDialogOpen } = props;\r\n    const { setCurrentUserId } = useContext(UserContext);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [emailError, setEmailError] = useState(\" \");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\" \");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    function handleDialogClose() {\r\n        setDialogOpen(false);\r\n    }\r\n\r\n    function handleLogin() {\r\n        const emailValid = isValid(\"email\", email, setEmail, setEmailError);\r\n        const passwordValid = isValid(\"password\", password, setPassword, setPasswordError);\r\n        if (emailValid && passwordValid) {\r\n            setLoading(true);\r\n            // if login succeeds, set context user id and redirect to home page\r\n            (async () => {\r\n                // trim again just in case, since set<value>(<value>Trimmed) is asynchronous\r\n                const userId = await DB.login(email.trim(), password);\r\n                setLoading(false);\r\n                if (!userId) {\r\n                    setEmailError(errors[\"login\"]);\r\n                    setPasswordError(errors[\"login\"]);\r\n                } else {\r\n                    setCurrentUserId(userId);\r\n                    handleDialogClose();\r\n                    props.history.push(routes.HOME);\r\n                }\r\n            })();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <FormField\r\n                type=\"text\"\r\n                iconName=\"email\"\r\n                label=\"Email\"\r\n                value={email}\r\n                setValue={setEmail}\r\n                error={emailError}\r\n            />\r\n            <FormField\r\n                type=\"password\"\r\n                iconName=\"password\"\r\n                label=\"Password\"\r\n                value={password}\r\n                setValue={setPassword}\r\n                error={passwordError}\r\n            />\r\n            <FormButtonWrapper>\r\n                <ProgressButton \r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    loading={loading} \r\n                    handleClick={handleLogin}\r\n                    disableElevation\r\n                >\r\n                    Login\r\n                </ProgressButton>\r\n            </FormButtonWrapper>\r\n            <FormMessage color=\"textSecondary\" variant=\"body2\">\r\n                Don't have an account? &nbsp;\r\n                <RouterLink \r\n                    color=\"primary\" \r\n                    underline=\"hover\" \r\n                    onClick={handleDialogClose}\r\n                    to={routes.REGISTER}\r\n                > \r\n                    Sign Up \r\n                </RouterLink>\r\n            </FormMessage>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default withRouter(LoginForm);","// firebase setup\r\nimport config from './config';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n// consolidating tables\r\nimport * as hotdogs from './hotdogs';\r\nimport * as users from './users';\r\n\r\n// initialize firebase connection\r\nfirebase.initializeApp(config);\r\n\r\nexport {\r\n    firebase,\r\n    hotdogs,\r\n    users\r\n}\r\n","import React from 'react';\r\nimport { \r\n    Box, IconButton, Typography,\r\n    Dialog, DialogContent\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LoginForm from './loginForm';\r\nimport Icon from '../utils/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        paddingLeft: '50px'\r\n    },\r\n    dialogContent: {\r\n        paddingLeft: '5px!important',\r\n        paddingRight: '5px!important'\r\n    }\r\n}));\r\n\r\nfunction LoginFormDialog(props) {\r\n    const { open, setOpen } = props;\r\n    const classes = useStyles();\r\n\r\n    function handleClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <Dialog \r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            open={open}\r\n            onClose={() => handleClose()}\r\n        >\r\n            <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n                <Box flexGrow={1}>\r\n                    <Typography \r\n                        variant=\"h5\" \r\n                        align=\"center\" \r\n                        color=\"textSecondary\"\r\n                        className={classes.title}\r\n                    > \r\n                        Login \r\n                    </Typography>\r\n                </Box>\r\n                <Box>\r\n                    <IconButton onClick={() => handleClose()}>\r\n                        <Icon name=\"close\" />\r\n                    </IconButton>\r\n                </Box>\r\n            </Box>\r\n            <DialogContent className={classes.dialogContent}>\r\n                <LoginForm setDialogOpen={setOpen} />\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default LoginFormDialog;\r\n","import React, { useState } from 'react';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Icon from '../utils/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // button padding based on if used in navbar or not\r\n    button: {\r\n        position: 'relative',\r\n        padding: 'unset'\r\n    },\r\n    navButton: {\r\n        paddingTop: '5px!important',\r\n        paddingBottom: '5px!important'    \r\n    },\r\n    // image size based on if it's an avatar, used in navbar, or used in hotdog addform preview\r\n    hotdogImage: {\r\n        height: '200px',\r\n        width: '200px'\r\n    },\r\n    avatarImage: {\r\n        height: '100px', \r\n        width: '100px',\r\n    },\r\n    navImage: {\r\n        height: '40px', \r\n        width: '40px',\r\n    },\r\n    // icon size based on if used in navbar or not\r\n    icon: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: '-18px',\r\n        marginLeft: '-18px',\r\n    },\r\n    navIcon: {\r\n        marginTop: '-12px!important',\r\n        marginLeft: '-12px!important',\r\n    },\r\n    hover: {\r\n        '-webkit-filter': 'brightness(35%)',\r\n    },\r\n}));\r\n\r\n/* \r\n    Avatar or img wrapped in a button - on hover, darkens and shows an Icon\r\n*/\r\nfunction ImageButton(props) {\r\n    const { imageUrl, iconName, iconSize, handleClick, avatar, navbar } = props;\r\n    const [hover, setHover] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    function handleMouseEnter() {\r\n        setHover(true);\r\n    }\r\n\r\n    function handleMouseLeave() {\r\n        setHover(false);\r\n    }\r\n\r\n    const Image = avatar ? Avatar : 'img';\r\n\r\n    return (\r\n        <IconButton \r\n            onMouseEnter={() => handleMouseEnter()}\r\n            onMouseLeave={() => handleMouseLeave()} \r\n            onClick={(event) => handleClick(event)} \r\n            className={\r\n                `${classes.button} ` +\r\n                (navbar ? `${classes.navButton}` : undefined)\r\n            }\r\n        >\r\n            <Image \r\n                src={imageUrl} \r\n                className={\r\n                    (navbar ? `${classes.navImage} ` : (avatar ? `${classes.avatarImage} ` : `${classes.hotdogImage} `)) +\r\n                    (hover ? `${classes.hover}` : undefined)\r\n                } \r\n            />\r\n            { hover && iconName &&\r\n                <Icon \r\n                    name={iconName}\r\n                    size={navbar ? \"inherit\" : iconSize}\r\n                    className={\r\n                        `${classes.icon} ` + \r\n                        (navbar ? `${classes.navIcon}` : undefined)\r\n                    }\r\n                /> \r\n            }\r\n        </IconButton>\r\n    );\r\n}\r\n\r\nexport default ImageButton;\r\n","/*\r\n    default values: currently only used for default hotdog image url - hotdogForm, hotdogCard\r\n*/\r\nconst constants = {\r\n    hotdogImageUrl: \"https://www.svgrepo.com/show/133687/hot-dog.svg\",\r\n    maxToppings: 15,\r\n    maxHotdogColumns: 3,\r\n}\r\n\r\nexport default constants;\r\n","import React, { useState } from 'react';\r\n// cropper\r\nimport Cropper from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.min.css';\r\n// dropzone\r\nimport Dropzone from 'react-dropzone';\r\n// material ui\r\nimport { \r\n    Box, Button, IconButton, Typography,\r\n    Dialog, DialogActions, DialogContent \r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// my components - photo preview\r\nimport ImageButton from './imageButton';\r\nimport ProgressButton from './progressButton';\r\nimport Icon from '../utils/icons';\r\nimport constants from '../utils/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // fixed height of for preview + dropzone/cropper\r\n    dialogContent: {\r\n        height: '500px',\r\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n        borderTop: '1px solid rgba(0, 0, 0, 0.12)',\r\n    },\r\n    title: {\r\n        paddingLeft: '12px'\r\n    },\r\n    // prevent momentary scrollbar flash on drop due to weird cropper container spacing\r\n    container: {\r\n        overflow: 'hidden'\r\n    },\r\n    preview: {\r\n        paddingTop: '5px',\r\n        paddingBottom: '5px', \r\n        borderBottom: '1px solid #cbb09c',\r\n    },\r\n    // same behaviour on isDragAccept and &:focus - blue background + border\r\n    dropzone: {\r\n        height: '100%',\r\n        width: '100%',\r\n        outline: 'none',\r\n        '&:focus': {\r\n            boxSizing: 'border-box',\r\n            border: '2px solid #4d90fe',\r\n            transition: 'border .1s ease-in-out',\r\n            backgroundColor: '#eaf2fe'\r\n        }\r\n    },\r\n    accept: {\r\n        outline: 'none',\r\n        boxSizing: 'border-box',\r\n        border: '2px solid #4d90fe',\r\n        transition: 'border .1s ease-in-out',\r\n        backgroundColor: '#eaf2fe'\r\n    },\r\n    // fixed cropper image dimensions based on window dimensions at the time of drop\r\n    cropper: {\r\n        height: '82%', \r\n        width: '82%',\r\n    },\r\n    // image name + caption area above cropper (no preview if not used for profile picture, so add padding to fill empty space)\r\n    cropperImageHeader: {\r\n        maxWidth: '95%'\r\n    },\r\n    paddingBottom: {\r\n        paddingBottom: '40px'\r\n    },\r\n    // prevent long image names (loses the file tag if overflow)\r\n    overflow: {\r\n        textOverflow: 'ellipsis',\r\n        overflow: 'hidden'\r\n    }\r\n}));\r\n\r\n/*\r\n    Dialog that allows a photo to be uploaded and cropped,\r\n    Sets parent's photo state variable as the cropped image upon pressing the \"set\" button\r\n    Converts cropped photo into a dataURL to be used in \"img\", \"Avatar\", etc. \r\n    Also saves crop box data in state so user can go back even if the dialog closes\r\n    If confirm is required, then pressing set button will only set local photo url variables \r\n    - once the confirm button is pressed, then calls parent setPhoto and setPhotoUrl variable is changed\r\n*/\r\nfunction PhotoUploadDialog(props) {\r\n    const { \r\n        setPhoto, photoUrl, setPhotoUrl, \r\n        open, setOpen, profile, \r\n        confirmRequired, confirmLoading \r\n    } = props;\r\n    // cropper\r\n    const [uploadError, setUploadError] = useState(\"\");\r\n    const [imageName, setImageName] = useState(\"\");\r\n    const [cropperImage, setCropperImage] = useState(null);\r\n    const [cropper, setCropper] = useState();\r\n    const [cropperData, setCropperData] = useState();\r\n    // confirm button before setting parent photo\r\n    const [confirmActive, setConfirmActive] = useState(false);\r\n    const [localPhoto, setLocalPhoto] = useState(null);\r\n    const [localPhotoUrl, setLocalPhotoUrl] = useState(photoUrl);\r\n    const classes = useStyles();\r\n\r\n    /*\r\n        custom accepted file handler since react-dropzone \"mutliple={false}\" doesn't work consistently\r\n        react-dropzone behaviour: if multiple files, one is accepted type and others rejected, \r\n        pushes accepted file to accepted array, and other files to rejected array\r\n        below onDrop handler behaviour: if number of files exceeds 1, then reject all\r\n    */\r\n    function onDrop(files) {\r\n        if (files.length > 1) {\r\n            setUploadError(`Too many photos! Drag your desired ${profile ? \"profile\" : \"hotdog\"} photo only`);\r\n        } else {\r\n            let file = files[0];\r\n            if (file.type === \"image/jpeg\" || file.type === \"image/png\") {\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file);\r\n                reader.onload = () => setCropperImage(reader.result);\r\n                setImageName(file.name);\r\n                setUploadError(\"\");\r\n            } else {\r\n                setUploadError(\"Upload error - choose a JPG or PNG and try again\");\r\n            }\r\n        }\r\n    }   \r\n\r\n    /* \r\n        Sets photo blob for parent, where it will be uploaded via firebase call\r\n        Sets photo dataURL - parent and dialog both use this for preview\r\n        Saves current crop box dimensions/positioning\r\n        If confirm is required, set local variables instead of parent\r\n    */\r\n    function handleSetPhoto() {\r\n        const max = 1024;\r\n        cropper.getCroppedCanvas({ \r\n            fillColor: '#fff',\r\n            maxHeight: max,\r\n            maxWidth: max,\r\n        }).toBlob((blob) => {\r\n            let reader = new FileReader();\r\n            reader.readAsDataURL(blob);\r\n            if (confirmRequired) {\r\n                reader.onload = () => setLocalPhotoUrl(reader.result);\r\n                setLocalPhoto(blob);\r\n                setConfirmActive(true);\r\n            } else {\r\n                reader.onload = () => setPhotoUrl(reader.result);\r\n                setPhoto(blob);\r\n            }\r\n        }, 'image/jpeg');\r\n        setCropperData(cropper.getData());\r\n    }\r\n\r\n    /* \r\n        Clicking preview button sets photo/avatar for parent to default\r\n        If confirm is required, set local variables instead of parent\r\n    */\r\n    function handleUnsetPhoto() {\r\n        const url = profile ? \"\" : constants[\"hotdogImageUrl\"];\r\n        if (confirmRequired) {\r\n            setLocalPhoto(null);\r\n            setLocalPhotoUrl(url);\r\n            setConfirmActive(true);\r\n        } else {\r\n            setPhoto(null);\r\n            setPhotoUrl(url);\r\n        }\r\n    }\r\n\r\n    function handleConfirmPhoto() {\r\n        setPhoto(localPhoto);\r\n        setPhotoUrl(localPhotoUrl);\r\n        setConfirmActive(false);\r\n    }\r\n\r\n    function handleResetCropper() {\r\n        setCropperImage(null);\r\n        setCropperData(null);\r\n    }\r\n\r\n    /*\r\n        If confirm is required, reset cropper and preview when dialog is closed\r\n        sleep before resetting images to prevent user from seeing this right as dialog is closed\r\n    */\r\n    function handleClose() {\r\n        setOpen(false);\r\n        if (confirmRequired) {\r\n            const sleep = (ms) => {\r\n                return new Promise(resolve => setTimeout(resolve, ms));\r\n            };\r\n            sleep(500).then(() => {\r\n                setCropperImage(null);\r\n                setLocalPhotoUrl(photoUrl);\r\n                setConfirmActive(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dialog \r\n            fullWidth\r\n            maxWidth=\"md\"\r\n            open={open}\r\n            onClose={() => handleClose()}\r\n        >\r\n            <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n                <Box flexGrow={1}>\r\n                    <Typography variant=\"h6\" color=\"textSecondary\" className={classes.title}>\r\n                        Select new {profile ? \"profile\" : \"hotdog\"} photo\r\n                    </Typography>\r\n                </Box>\r\n                <Box>\r\n                    <IconButton onClick={() => handleClose()}>\r\n                        <Icon name=\"close\" />\r\n                    </IconButton>\r\n                </Box>\r\n            </Box>\r\n            <DialogContent className={classes.dialogContent}>\r\n                <Box \r\n                    display=\"flex\"\r\n                    flexDirection=\"column\"\r\n                    height=\"100%\"\r\n                    width=\"100%\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                    className={classes.container}\r\n                >\r\n                    { profile && \r\n                        <Box \r\n                            display=\"flex\"\r\n                            flexDirection=\"column\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            className={classes.preview}\r\n                        >\r\n                            <Typography color=\"primary\" variant=\"caption\" style={{ paddingBottom: '5px' }}> \r\n                                <b>Your photo</b>\r\n                            </Typography>\r\n                            <ImageButton \r\n                                imageUrl={confirmRequired ? localPhotoUrl : photoUrl}\r\n                                iconName=\"delete\"\r\n                                iconSize=\"large\"\r\n                                handleClick={handleUnsetPhoto}\r\n                                avatar\r\n                            />\r\n                        </Box>\r\n                    }\r\n                    { !cropperImage && \r\n                        <Box height=\"100%\" width=\"100%\">\r\n                            <Dropzone onDrop={(files) => onDrop(files)}>\r\n                                {({getRootProps, getInputProps, isDragActive, isDragAccept}) => (\r\n                                    <div {...getRootProps({\r\n                                        className: `${classes.dropzone} ` + (isDragAccept ? `${classes.accept}` : undefined)\r\n                                    })}>\r\n                                        <input {...getInputProps()}/>\r\n                                        <Box \r\n                                            display=\"flex\" \r\n                                            flexDirection=\"row\" \r\n                                            alignItems=\"center\" \r\n                                            justifyContent=\"center\"\r\n                                            height=\"100%\" \r\n                                            width=\"100%\"\r\n                                        >\r\n                                            <Typography align=\"center\" color=\"textSecondary\" variant=\"h5\">\r\n                                                { !isDragActive && uploadError.trim() === \"\" && \r\n                                                    `Drag a new ${profile ? \"profile\" : \"hotdog\"} photo here or click to upload` \r\n                                                }\r\n                                                { isDragAccept && uploadError.trim() === \"\" && \r\n                                                    \"Drop photo to upload\" \r\n                                                }\r\n                                                { uploadError.trim() !== \"\" && \r\n                                                    uploadError \r\n                                                }\r\n                                            </Typography> \r\n                                        </Box>\r\n                                    </div>\r\n                                )}\r\n                            </Dropzone>\r\n                        </Box>\r\n                    }\r\n                    { cropperImage &&\r\n                        /*  \r\n                            NOTE: making Cropper's parent container dimensions 100% \r\n                            will scale small images up, but won't re-center the image if window is resized\r\n                        */\r\n                        <Box \r\n                            display=\"flex\"\r\n                            flexDirection=\"column\"\r\n                            height=\"100%\"\r\n                            width=\"100%\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Box \r\n                                display=\"flex\"\r\n                                flexDirection=\"column\"\r\n                                height=\"15%\"\r\n                                width=\"95%\"\r\n                                justifyContent=\"center\"\r\n                                className={\r\n                                    `${classes.cropperImageHeader} ` + \r\n                                    (!profile ? `${classes.paddingBottom}` : undefined)\r\n                                }\r\n                            >\r\n                                <Typography variant=\"caption\" className={classes.overflow}> \r\n                                    <b>{imageName}</b>\r\n                                </Typography>\r\n                                <Typography variant=\"caption\"> \r\n                                    To crop, drag the region below and click \"Set\". \r\n                                    To upload another photo, click \"Reset\". \r\n                                </Typography>\r\n                            </Box>\r\n                            <Box flexGrow={1}>\r\n                                <Cropper\r\n                                    aspectRatio={1}\r\n                                    src={cropperImage}\r\n                                    data={cropperData}\r\n                                    viewMode={1}\r\n                                    center={false}\r\n                                    minCropBoxHeight={80}\r\n                                    minCropBoxWidth={80}\r\n                                    background={false}\r\n                                    responsive={false}\r\n                                    autoCropArea={1}\r\n                                    checkOrientation={false}\r\n                                    zoomable={false}\r\n                                    toggleDragModeOnDblclick={false}\r\n                                    onInitialized={(instance) => setCropper(instance)}\r\n                                    className={classes.cropper}\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                    }\r\n                </Box>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    disableElevation\r\n                    disabled={!cropperImage}\r\n                    onClick={() => handleSetPhoto()}\r\n                > \r\n                    Set\r\n                </Button>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    disableElevation\r\n                    disabled={!cropperImage}\r\n                    onClick={() => handleResetCropper()}\r\n                > \r\n                    Reset\r\n                </Button>\r\n                { confirmRequired && \r\n                    <ProgressButton \r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        disabled={!confirmActive}\r\n                        loading={confirmLoading}\r\n                        handleClick={handleConfirmPhoto}\r\n                    >\r\n                        Confirm new photo\r\n                    </ProgressButton>\r\n                }\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    disableRipple\r\n                    disableElevation\r\n                    onClick={() => handleClose()}\r\n                > \r\n                    Cancel\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n\r\n}\r\n\r\nexport default PhotoUploadDialog;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Avatar, Badge, Box, Button, CircularProgress, IconButton, Typography, Menu } from '@material-ui/core';\r\nimport ImageButton from './imageButton';\r\nimport Icon from '../utils/icons';\r\nimport PhotoUploadDialog from './photoUploadDialog';\r\nimport * as DB from '../database/wrapper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        paddingTop: '5px',\r\n        paddingBottom: '5px'\r\n    },\r\n    avatar: {\r\n        opacity: 0.6,\r\n        '&:hover': {\r\n            opacity: 1\r\n        }\r\n    },\r\n    overflow: {\r\n        textOverflow: 'ellipsis',\r\n        overflow: 'hidden'\r\n    },\r\n    menuAvatar: {\r\n        width: theme.spacing(10),\r\n        height: theme.spacing(10),\r\n    },\r\n    // transparent background if menu avatar is loading\r\n    loading: {\r\n        backgroundColor: 'transparent'\r\n    },\r\n    // override theme.js IconButton hover background color, shadow copied from google account selector\r\n    menuAvatarBadge: {\r\n        width: '30px',\r\n        height: '30px',\r\n        // border: '1px solid white',\r\n        backgroundColor: 'white',\r\n        boxShadow: '0 1px 1px 0 rgba(65, 69, 73, 0.3)',\r\n        '&:hover': {\r\n            backgroundColor: '#f6f2ef',\r\n        }\r\n    },\r\n    // line dividing header and rest of menu - copy-pasted from mui's ListItem divider\r\n    menuHeader: {\r\n        outline: 'none',\r\n        padding: '5px',\r\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n        backgroundClip: 'padding-box',\r\n    },\r\n    menuHeaderItem: {\r\n        paddingTop: '3px',\r\n        paddingBottom: '3px',\r\n    },\r\n    menuButton: {\r\n        fontSize: '0.85rem'\r\n    }\r\n}));\r\n\r\n\r\n/* \r\n    Avatar with material ui menu - for now, only used in navbar, and also takes in handleLogout function\r\n*/\r\nfunction NavbarMenu(props) {\r\n    const { userId, userName, userImageUrl, setUserImageUrl, handleLogout } = props;\r\n    const [anchor, setAnchor] = useState(null);\r\n    const [openPhotoDialog, setOpenPhotoDialog] = useState(false);\r\n    const [newImage, setNewImage] = useState(null);\r\n    const [newImageUrl, setNewImageUrl] = useState(userImageUrl);\r\n    const [loading, setLoading] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    // update backend, set image src as firebase url - set new image last to prevent recursive calls\r\n    useEffect(() => {\r\n        if (newImageUrl !== userImageUrl) {\r\n            // console.log(\"CHANGED USER IMAGE\");\r\n            (async () => {\r\n                setLoading(true);\r\n                let url = await DB.putUserImage(userId, newImage);\r\n                setUserImageUrl(url);\r\n                setNewImageUrl(url);\r\n                setLoading(false);\r\n            })();\r\n        }\r\n    }, [newImageUrl]);\r\n    \r\n    function handleOpen(event) {\r\n        setAnchor(event.currentTarget);\r\n    }\r\n\r\n    function handleClose() {\r\n        setAnchor(null);\r\n    }\r\n\r\n    function handleOpenPhotoDialog() {\r\n        setOpenPhotoDialog(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ImageButton \r\n                imageUrl={userImageUrl}\r\n                iconName=\"settings\"\r\n                handleClick={handleOpen}\r\n                avatar\r\n                navbar\r\n            />\r\n            <Menu\r\n                open={Boolean(anchor)}\r\n                onClose={() => handleClose()}\r\n                anchorEl={anchor}\r\n                className={classes.menu}\r\n                getContentAnchorEl={null}\r\n                keepMounted\r\n                anchorOrigin={{vertical: 'bottom', horizontal: 'right'}}\r\n                transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            >\r\n                <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" className={classes.menuHeader}>\r\n                    <Box className={classes.menuHeaderItem}>\r\n                        <Badge \r\n                            overlap=\"circle\"\r\n                            anchorOrigin={{vertical: 'bottom', horizontal: 'right'}}\r\n                            badgeContent={\r\n                                <>\r\n                                    <IconButton onClick={() => handleOpenPhotoDialog()} className={classes.menuAvatarBadge}>\r\n                                        <Icon name=\"camera\" size=\"small\" />\r\n                                    </IconButton>\r\n                                    <PhotoUploadDialog \r\n                                        setPhoto={setNewImage} \r\n                                        photoUrl={newImageUrl}\r\n                                        setPhotoUrl={setNewImageUrl}\r\n                                        open={openPhotoDialog}\r\n                                        setOpen={setOpenPhotoDialog}\r\n                                        profile\r\n                                        confirmRequired\r\n                                        confirmLoading={loading}\r\n                                    />\r\n                                </>\r\n                            }\r\n                        >\r\n                            { loading &&\r\n                                <Avatar className={`${classes.menuAvatar} ${classes.loading}`}>\r\n                                    <CircularProgress color=\"primary\" size=\"inherit\" />\r\n                                </Avatar>\r\n                            }\r\n                            { !loading && \r\n                                <Avatar src={userImageUrl} className={classes.menuAvatar} />\r\n                            }\r\n                        </Badge>\r\n                    </Box>\r\n                    <Box className={classes.menuHeaderItem}>\r\n                        <Typography variant=\"body2\" className={classes.overflow}> \r\n                            {userName} \r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n                <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                    <Box width=\"100%\">\r\n                        <Button\r\n                            variant=\"text\"\r\n                            color=\"primary\"\r\n                            disableElevation\r\n                            fullWidth\r\n                            startIcon={<Icon name=\"logout\" size=\"small\" />}\r\n                            onClick={() => handleLogout()}\r\n                            className={classes.menuButton}\r\n                        >\r\n                            Sign Out\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n            </Menu>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NavbarMenu;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\n// material ui\r\nimport { AppBar, Avatar, Box, Button, CircularProgress, Toolbar, Typography } from '@material-ui/core';\r\n// my components\r\nimport LoginFormDialog from './loginFormDialog';\r\nimport NavbarMenu from './navbarMenu';\r\nimport RouterLink from './routerLink';\r\n// routing\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as routes from '../utils/routes';\r\n// context\r\nimport { UserContext } from '../userContext';\r\n// database\r\nimport * as DB from '../database/wrapper';\r\n\r\nfunction NavBar(props) { \r\n    const { userId, setCurrentUserId } = useContext(UserContext);\r\n    const [openLoginDialog, setOpenLoginDialog] = useState(false);\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [userImageUrl, setUserImageUrl] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (userId !== null) {\r\n            (async () => {\r\n                // reset loading status to allow logging in/out to refresh the navbar avatar\r\n                setLoading(true);\r\n                const user = await DB.getUser(userId);\r\n                const url = await DB.getUserImage(userId);\r\n                setUserName(user[\"name\"]);\r\n                setUserImageUrl(url);\r\n                setLoading(false);\r\n            })();\r\n        }\r\n    }, [userId]);\r\n\r\n    function handleLogout() {\r\n        setCurrentUserId(null);\r\n        props.history.push(routes.HOME);\r\n    }\r\n\r\n    function handleOpenLoginDialog() {\r\n        setOpenLoginDialog(true);\r\n    }\r\n\r\n    return (\r\n        <AppBar position=\"sticky\" elevation={0}>\r\n            <Toolbar>\r\n                <Box display=\"flex\" alignItems=\"center\" width={1}>\r\n                    <Box flexGrow={1}>\r\n                        <Typography variant=\"h6\">\r\n                            <RouterLink color=\"primary\" underline=\"none\" to={routes.HOME}>\r\n                                Secret Ninja Hotdogs\r\n                            </RouterLink>\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                        { userId && !loading &&\r\n                            <NavbarMenu \r\n                                userId={userId}\r\n                                userName={userName}\r\n                                userImageUrl={userImageUrl}\r\n                                setUserImageUrl={setUserImageUrl}\r\n                                handleLogout={handleLogout}\r\n                            />\r\n                        }\r\n                        { userId && loading &&\r\n                            <Avatar style={{ height: '40px', width: '40px', backgroundColor: 'transparent' }}>\r\n                                <CircularProgress color=\"primary\" size=\"inherit\" />\r\n                            </Avatar>\r\n                        }\r\n                        { !userId && \r\n                            <>\r\n                                <Button \r\n                                    component={Link}\r\n                                    to={routes.REGISTER}\r\n                                    color=\"secondary\" \r\n                                    variant=\"text\" \r\n                                    disableElevation\r\n                                > \r\n                                    Sign Up\r\n                                </Button>\r\n                                <Button \r\n                                    variant=\"text\" \r\n                                    color=\"secondary\" \r\n                                    onClick={() => handleOpenLoginDialog()}\r\n                                >\r\n                                    Login\r\n                                </Button>\r\n                                <LoginFormDialog open={openLoginDialog} setOpen={setOpenLoginDialog} />\r\n                            </>\r\n                        }\r\n                    </Box>\r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","import React from 'react';\r\n// material ui\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction PageTitle(props) {\r\n\treturn (\r\n\t\t<Typography variant=\"h4\" color=\"textSecondary\" align=\"center\">\r\n            {props.text}\r\n        </Typography>\r\n\t);\r\n}\r\n\r\nexport default PageTitle;","import React from 'react';\r\n// material ui\r\nimport { Box, IconButton, Snackbar, Typography }  from '@material-ui/core';\r\nimport Icon from '../utils/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // override iconbutton styles in theme.js\r\n    button: {\r\n        color: 'white',\r\n        '&:hover': {\r\n            color: '#b9f6ca',\r\n        }\r\n    }\r\n}));\r\n\r\n/*\r\n    message with an icon\r\n*/\r\nfunction Message(props) {\r\n    const { message } = props;\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n            <Box mr={2}>\r\n                <Icon name=\"tick\" />\r\n            </Box>\r\n            <Box>\r\n                <Typography variant=\"subtitle2\" display=\"inline\">\r\n                    {message}\r\n                </Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\n/* \r\n    close button (default) + action button (if defined)\r\n*/\r\nfunction Action(props) {\r\n    const classes = useStyles();\r\n    const { actionButton, handleClose } = props;\r\n    return (\r\n        <>\r\n            {actionButton}\r\n            <IconButton size=\"small\" onClick={handleClose} className={classes.button}>\r\n                <Icon name=\"close\" />\r\n            </IconButton>\r\n        </>\r\n    );    \r\n}\r\n\r\n/* \r\n    only opens if parent opens it, sets parent val to false if time out or closed\r\n*/\r\nfunction SuccessSnackbar(props) {\r\n    const { open, setOpen, message, action } = props;\r\n\r\n    function handleClose(event, reason) {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    }\r\n\r\n    const autoHideDuration = 5000;\r\n    return (\r\n        <Snackbar \r\n            open={open}\r\n            autoHideDuration={autoHideDuration}\r\n            onClose={(event, reason) => handleClose(event, reason)}\r\n            message={<Message message={message} />}\r\n            action={<Action actionButton={action} handleClose={handleClose}/>}\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuccessSnackbar;\r\n","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n// email validator\r\nimport isEmail from 'validator/lib/isEmail';\r\n// my components\r\nimport Form from './form';\r\nimport FormField from './formField';\r\nimport FormButtonWrapper from './formButtonWrapper';\r\nimport FormMessage from './formMessage';\r\nimport ImageButton from './imageButton';\r\nimport LoginFormDialog from './loginFormDialog';\r\nimport PhotoUploadDialog from './photoUploadDialog';\r\nimport ProgressButton from './progressButton';\r\nimport SuccessSnackbar from './successSnackbar';\r\n// utils\r\nimport errors from '../utils/errors';\r\n// database\r\nimport * as DB from '../database/wrapper';\r\n\r\n/* \r\n    helper: checks trimmed input, returning the appropriate error message\r\n    for now, each field can't have spaces or special characters\r\n    type determines checking method, password arg is only used for passwordConfirm checking\r\n*/\r\nfunction checkInput(type, inputTrimmed, password) {\r\n    if (!inputTrimmed && type !== \"passwordConfirm\") {\r\n        return errors[\"empty\"];\r\n    } \r\n    var error = \" \";\r\n    switch (type) {\r\n        case \"name\": \r\n            if (!inputTrimmed.match(/^[A-Za-z0-9]+$/g)) error = errors[\"special\"];\r\n            break;\r\n        case \"email\": \r\n            if (!isEmail(inputTrimmed)) error = errors[\"email\"];\r\n            break;\r\n        case \"password\":\r\n            const length = 6;\r\n            if (inputTrimmed.length < length) error = errors[\"password\"](length);\r\n            break;\r\n        case \"passwordConfirm\":\r\n            if (inputTrimmed !== password) error = errors[\"passwordConfirm\"];\r\n            break;\r\n        default: \r\n            break;\r\n    }\r\n    return error;\r\n}\r\n\r\n/*\r\n    helper: checks validity of input based on returned error, trims input, and sets input error\r\n*/\r\nfunction isValid(type, input, setInput, setInputError, password) {\r\n    const trimmed = input.trim();\r\n    const error = type === \"passwordConfirm\" ? checkInput(type, trimmed, password) : checkInput(type, trimmed);\r\n    setInput(trimmed);\r\n    setInputError(error);\r\n    return error.trim() === \"\";\r\n}\r\n\r\nfunction RegisterForm(props) {\r\n    // user details\r\n    const [name, setName] = useState(\"\");\r\n    const [nameError, setNameError] = useState(\" \");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [emailError, setEmailError] = useState(\" \");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\" \");\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n    const [passwordConfirmError, setPasswordConfirmError] = useState(\" \");\r\n    const [registered, setRegistered] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    // profile image/avatar\r\n    const [image, setImage] = useState(null);\r\n    const [imageUrl, setImageUrl] = useState(\"\");\r\n    const [openPhotoDialog, setOpenPhotoDialog] = useState(false);\r\n    function handleOpenPhotoDialog() {\r\n        setOpenPhotoDialog(true);\r\n    }\r\n    // login dialog for snackbar action on successful registration\r\n    // TODO: might remove action button altogether from snackbar\r\n    const [openLoginDialog, setOpenLoginDialog] = useState(false);\r\n    function handleOpenLoginDialog() {\r\n        setOpenLoginDialog(true);\r\n    }\r\n\r\n    function handleRegister() {\r\n        // set registered to false again to handle consecutive adds on same page (no reload)\r\n        setRegistered(false);\r\n        const nameValid = isValid(\"name\", name, setName, setNameError);\r\n        const emailValid = isValid(\"email\", email, setEmail, setEmailError);\r\n        const passwordValid = isValid(\"password\", password, setPassword, setPasswordError);\r\n        const passwordConfirmValid = isValid(\"passwordConfirm\", passwordConfirm, setPasswordConfirm, setPasswordConfirmError, password);\r\n\r\n        if (nameValid && emailValid && passwordValid && passwordConfirmValid) {\r\n            setLoading(true);\r\n            (async () => {\r\n                // only set user image if defined and account creation succeeded\r\n                /* \r\n                */\r\n                let id = await DB.postUser(name, email, password);\r\n                let registerSuccess = id !== false;\r\n                if (registerSuccess && image) {\r\n                    registerSuccess = await DB.postUserImage(id, image);\r\n                }\r\n                // TODO: disable sign up before final deploy\r\n                // let registerSuccess = false;\r\n                setLoading(false);\r\n\r\n                // if register succeeds, reset all fields and give user option to go to login \r\n                if (!registerSuccess) {\r\n                    setEmailError(errors[\"email\"]);\r\n                } else {\r\n                    setName(\"\");\r\n                    setEmail(\"\");\r\n                    setPassword(\"\");\r\n                    setPasswordConfirm(\"\");\r\n                    setImage(null);\r\n                    setImageUrl(\"\");\r\n                    setRegistered(true);\r\n                }\r\n            })();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <FormMessage variant=\"body2\" color=\"textSecondary\">\r\n                { !image && \"Select your profile picture by clicking the avatar\" }\r\n                { image && \"Your profile picture\" }\r\n            </FormMessage>\r\n            <FormButtonWrapper style={{ borderBottom: '1px solid #cbb09c' }}>\r\n                <ImageButton\r\n                    imageUrl={imageUrl}\r\n                    iconName=\"camera\"\r\n                    iconSize=\"large\"\r\n                    handleClick={handleOpenPhotoDialog}\r\n                    avatar\r\n                />\r\n            </FormButtonWrapper>\r\n            <PhotoUploadDialog \r\n                setPhoto={setImage} \r\n                photoUrl={imageUrl}\r\n                setPhotoUrl={setImageUrl}\r\n                open={openPhotoDialog}\r\n                setOpen={setOpenPhotoDialog}\r\n                profile\r\n            />\r\n            <FormField\r\n                type=\"text\"\r\n                iconName=\"user\"\r\n                label=\"Name\"\r\n                value={name}\r\n                setValue={setName}\r\n                error={nameError}\r\n            />\r\n            <FormField\r\n                type=\"text\"\r\n                iconName=\"email\"\r\n                label=\"Email\"\r\n                value={email}\r\n                setValue={setEmail}\r\n                error={emailError}\r\n            />\r\n            <FormField\r\n                type=\"password\"\r\n                iconName=\"password\"\r\n                label=\"Password\"\r\n                value={password}\r\n                setValue={setPassword}\r\n                error={passwordError}\r\n            />\r\n            <FormField\r\n                type=\"password\"\r\n                iconName=\"none\"\r\n                label=\"Confirm Password\"\r\n                value={passwordConfirm}\r\n                setValue={setPasswordConfirm}\r\n                error={passwordConfirmError}\r\n            />\r\n            <FormButtonWrapper>\r\n                <ProgressButton \r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    disableElevation\r\n                    loading={loading} \r\n                    handleClick={handleRegister}\r\n                >\r\n                    Register\r\n                </ProgressButton>\r\n            </FormButtonWrapper>\r\n            <SuccessSnackbar\r\n                open={registered}\r\n                setOpen={setRegistered}\r\n                message=\"Registration successful\"\r\n                action={\r\n                    <>\r\n                        <Button variant=\"text\" color=\"secondary\" onClick={() => handleOpenLoginDialog()}>\r\n                            Login\r\n                        </Button>\r\n                        <LoginFormDialog open={openLoginDialog} setOpen={setOpenLoginDialog} />\r\n                    </>\r\n                }\r\n            />\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default RegisterForm;","import React from 'react';\r\nimport { \r\n    Grid, Typography,\r\n    List, ListItem, ListItemIcon, ListItemText, ListSubheader,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Icon from '../utils/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // overflow for list items - no need to specify width\r\n    overflow: {\r\n        textOverflow: 'ellipsis',\r\n        overflow: 'hidden'\r\n    },\r\n    // copy-paste listItem divider styling for toppings grid\r\n    bottomDivider: {\r\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n        backgroundClip: 'padding-box',\r\n    }\r\n}));\r\n\r\n/* \r\n    list item with overflow, adds icon/inset depending on column\r\n*/\r\nfunction Topping(props) {\r\n    const classes = useStyles();\r\n    const { index, value, firstColumn} = props;\r\n    const iconName = firstColumn ? \"hotdogTopping\" : \"none\";\r\n    return (\r\n        <ListItem>\r\n            {index === 0 &&\r\n                <ListItemIcon>\r\n                    <Icon name={iconName} />\r\n                </ListItemIcon>\r\n            }\r\n            <ListItemText \r\n                inset={index !== 0}\r\n                disableTypography \r\n                primary={\r\n                    <Typography variant=\"body2\" className={classes.overflow}>\r\n                        {value !== \"\" ? value : <br/>}\r\n                    </Typography>\r\n                } \r\n            />\r\n        </ListItem>\r\n    );\r\n}\r\n\r\n/* \r\n    splits hotdog toppings into a table-like structure\r\n*/\r\nfunction HotdogIngredientsList(props) {\r\n    const classes = useStyles();\r\n    const { sausage, sauce, toppings, dialog } = props;\r\n    // hard-coded to make toppings look nice depending on context\r\n    const maxRowsDialog = 5;\r\n    const maxRowsCard = 3;\r\n    const maxColumnsCard = 1;\r\n    // calculate number of rows and columns based on context - used to fill blank toppings later\r\n    const numRows = dialog ? maxRowsDialog : maxRowsCard;\r\n    const numColumns = dialog ? Math.max(1, Math.ceil(toppings.length/numRows)) : maxColumnsCard;\r\n    // display all toppings if dialog, otherwise only display 3\r\n    const numDisplay = dialog ? toppings.length : maxRowsCard;\r\n    var toppingsDisplay = [...toppings.slice(0, numDisplay)];\r\n\r\n    // if ingredients list is used in card instead of dialog,\r\n    // and the original toppings length is more than n, then replace (n-1)th element with \"...\"\r\n    // otherwise, push blank toppings as needed\r\n    if (!dialog && toppings.length > numDisplay) {\r\n        toppingsDisplay[numDisplay-1] = \"...\";\r\n    } else if (toppingsDisplay.length < numRows*numColumns) {\r\n        if (toppingsDisplay.length === 0) {\r\n            toppingsDisplay.push(\"No toppings!\");\r\n        }\r\n        const numBlank = numColumns*numRows - toppingsDisplay.length;\r\n        for (var i = 0; i < numBlank ; i++) {\r\n            toppingsDisplay.push(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <List dense disablePadding subheader={<ListSubheader color=\"primary\"> Ingredients </ListSubheader>}>\r\n            <ListItem divider>\r\n                <ListItemIcon>\r\n                    <Icon name=\"hotdogSausage\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary={sausage} className={classes.overflow} />\r\n            </ListItem>\r\n            <ListItem divider>\r\n                <ListItemIcon>\r\n                    <Icon name=\"hotdogSauce\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary={sauce} className={classes.overflow} />\r\n            </ListItem>\r\n            <Grid container className={classes.bottomDivider}>\r\n                {[...Array(numColumns)].map((e, i) => (\r\n                    <Grid item key={i} xs={12/numColumns}>\r\n                        { toppingsDisplay.slice(i*numRows, (i+1)*numRows).map((topping, j) => (\r\n                            <Topping \r\n                                key={j}\r\n                                index={j}\r\n                                value={topping}\r\n                                firstColumn={i === 0}\r\n                            />\r\n                        ))}\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </List>\r\n    ); \r\n}\r\n\r\nexport default HotdogIngredientsList;\r\n","/* \r\n    helper functions used in mutliple components\r\n*/\r\n\r\n// hotdogCard, hotdogDetailsDialog - formats seconds to a readable date (\"DD Month YYYY\")\r\nfunction secondsToDate(s) {\r\n    var date = new Date(1970, 0, 1);\r\n    date.setTime(s * 1000);\r\n    return date.getDate() + \" \" + (date.toLocaleString('default', {month: 'long'})) + \", \" + date.getFullYear();\r\n}\r\n\r\nexport {\r\n    secondsToDate,\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Avatar, Button, Box, IconButton, \r\n    Card, CardHeader, CardMedia, CardContent, CardActions, \r\n} from '@material-ui/core';\r\n// my components\r\nimport Icon from '../utils/icons';\r\nimport HotdogIngredientsList from './hotdogIngredientsList';\r\nimport { secondsToDate } from '../utils/functions';\r\n\r\n/*\r\n    has to be a wrapped in a memo to prevent useless re-rendering of existing cards in homehotdoggrid\r\n*/\r\nconst HotdogCard = React.memo((props) => {\r\n    // TODO: keep id, since will need for liking later on\r\n    const { \r\n        id, creatorId, creatorName, creatorImageUrl, \r\n        hotdogImageUrl, ingredients, title, ts,\r\n        setHotdogDetailsId, setOpenDetailsDialog,\r\n        setDeleteId,\r\n    } = props;\r\n    // TODO: keep below console log to check for useless rendering\r\n    // console.log(\"Hotdog \" + id + \" rendered\");\r\n\r\n    // format timestamp seconds into readable date\r\n    const subheader = secondsToDate(ts);\r\n\r\n    // set hotdog details dialog\r\n    function handleSetHotdogDetailsId() {\r\n        setOpenDetailsDialog(true);\r\n        setHotdogDetailsId(id);\r\n    }\r\n\r\n    // let hotdog grid handle hotdog deleting\r\n    function handleSetDeleteId() {\r\n        setDeleteId(id);\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                avatar={<Avatar src={creatorImageUrl} />}\r\n                title={title + \" by \" + creatorName}\r\n                subheader={subheader}\r\n            />\r\n            <CardMedia image={hotdogImageUrl} />\r\n            <CardContent>\r\n                <HotdogIngredientsList \r\n                    sausage={ingredients[\"sausage\"]}\r\n                    sauce={ingredients[\"sauce\"]}\r\n                    toppings={ingredients[\"toppings\"]}\r\n                />\r\n            </CardContent>\r\n            <CardActions>\r\n                <Box display=\"flex\" width=\"100%\">\r\n                    <Box flexGrow={1}>\r\n                        <IconButton aria-label=\"like\">\r\n                            <Icon name=\"like\" />\r\n                        </IconButton>\r\n                        <Button \r\n                            variant=\"text\" \r\n                            color=\"primary\"\r\n                            disableRipple \r\n                            onClick={() => handleSetHotdogDetailsId()}\r\n                        >\r\n                            View details\r\n                        </Button>\r\n                    </Box>\r\n                    <Box>\r\n                        <IconButton onClick={() => handleSetDeleteId()}>\r\n                            <Icon name=\"delete\" />\r\n                        </IconButton>\r\n                    </Box>\r\n                </Box>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n});\r\n\r\nexport default HotdogCard;\r\n","import React, { useState } from 'react';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Icon from '../utils/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrapper: {\r\n        position: 'relative',\r\n    },\r\n    image: {\r\n        height: '200px',\r\n        width: '200px'\r\n    },\r\n    iconWrapper: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '25%',\r\n        marginTop: '-30px',\r\n        marginLeft: '-5px',\r\n    },\r\n    hover: {\r\n        cursor: 'pointer',\r\n        '-webkit-filter': 'brightness(35%)',\r\n    },\r\n}));\r\n\r\n/* \r\n    imageButton with two buttons\r\n*/\r\nfunction ImageButtonDouble(props) {\r\n    const { imageUrl, iconNameOne, iconNameTwo, handleClickOne, handleClickTwo } = props;\r\n    const [hover, setHover] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    function handleMouseEnter() {\r\n        setHover(true);\r\n    }\r\n\r\n    function handleMouseLeave() {\r\n        setHover(false);\r\n    }\r\n\r\n    return (\r\n        <div\r\n            onMouseEnter={() => handleMouseEnter()}\r\n            onMouseLeave={() => handleMouseLeave()} \r\n            className={classes.wrapper}\r\n        >\r\n            <img \r\n                alt=\"button\"\r\n                src={imageUrl} \r\n                className={\r\n                    `${classes.image} ` +\r\n                    (hover ? `${classes.hover}` : undefined)\r\n                } \r\n            />\r\n            { hover &&\r\n                <div className={classes.iconWrapper}>\r\n                    <IconButton color=\"primary\" onClick={() => handleClickOne()}>\r\n                        <Icon name={iconNameOne} size=\"large\" /> \r\n                    </IconButton>\r\n                    <IconButton color=\"primary\" onClick={() => handleClickTwo()}>\r\n                        <Icon name={iconNameTwo} size=\"large\" /> \r\n                    </IconButton>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageButtonDouble;\r\n","import React, { useContext, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport isEqual from 'lodash/isEqual';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport Button from '@material-ui/core/Button';\r\n// my components\r\nimport Form from './form';\r\nimport FormField from './formField';\r\nimport FormButtonWrapper from './formButtonWrapper';\r\nimport FormMessage from './formMessage';\r\nimport ImageButtonDouble from './imageButtonDouble';\r\nimport PhotoUploadDialog from './photoUploadDialog';\r\nimport ProgressButton from './progressButton';\r\nimport SuccessSnackbar from './successSnackbar';\r\n// utils\r\nimport Icon from '../utils/icons';\r\nimport errors from '../utils/errors';\r\nimport constants from '../utils/constants';\r\n// context\r\nimport { UserContext } from '../userContext';\r\n// database\r\nimport * as DB from '../database/wrapper';\r\n\r\n/* \r\n    helper: checks trimmed input, returning the appropriate error message\r\n    for now, each field can't have spaces or special characters\r\n*/\r\nfunction checkInput(inputTrimmed) {\r\n    var error = \" \";\r\n    if (!inputTrimmed) {\r\n        error = errors[\"empty\"];\r\n    } else if (!inputTrimmed.match(/^[A-Za-z0-9]+$/g)) {\r\n        error = errors[\"special\"];\r\n    }\r\n    return error;\r\n}\r\n\r\n/*\r\n    helper: checks validity of input based on returned error, trims input, and sets input error\r\n*/\r\nfunction isValid(input, setInput, setInputError) {\r\n    const trimmed = input.trim();\r\n    const error = checkInput(trimmed);\r\n    setInput(trimmed);\r\n    setInputError(error);\r\n    return error.trim() === \"\";\r\n}\r\n\r\n/*\r\n    helper: same functionality as isValid, but for toppings\r\n    redundant to send both the topping and topping key, but saves from having to pass toppings each call\r\n    cheaper to pass an index and the dispatch functions instead\r\n*/\r\nfunction isValidTopping(topping, key, updateToppings, updateToppingErrors) {\r\n    const trimmed = topping.trim();\r\n    const error = checkInput(trimmed);\r\n    updateToppings(key, trimmed);\r\n    updateToppingErrors(key, error);\r\n    return error.trim() === \"\";\r\n}\r\n\r\n/* \r\n    helper: removes fields from changes that match initial values - ignores order\r\n*/\r\nfunction removeMatching(changes, initial) {\r\n    var res = changes;\r\n    for (var k in res) {\r\n        if (k !== \"toppings\" && res[k] === initial[k]) {\r\n            delete res[k];\r\n        } else if (k === \"toppings\") {\r\n            if (isEqual(res[k].sort(), initial[k].sort())) {\r\n                delete res[k];\r\n            }\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\n/*\r\n    Hotdog adding/editing form \r\n        assumes initial values + hotdog id passed if edit is true:\r\n            used exclusively in HotdogDetailsDialog (> HotdogFormDialog)\r\n        setAddId, setEditId:\r\n            used exclusively for HotdogGrid to fake real-time updates\r\n*/\r\nfunction HotdogForm(props) {\r\n    const { \r\n        id, initialDescription, initialHotdogImageUrl, initialIngredients, initialTitle, edit, setDialogHotdogImageUrl,\r\n        setAddId, setEditId\r\n    } = props;\r\n    const { userId } = useContext(UserContext);\r\n    const [loading, setLoading] = useState(false);\r\n    const [openSnackbar, setOpenSnackbar] = useState(false);\r\n    // input details\r\n    const [title, setTitle] = useState(edit ? initialTitle : \"\");\r\n    const [description, setDescription] = useState(edit ? initialDescription : \"\");\r\n    const [sausage, setSausage] = useState(edit ? initialIngredients[\"sausage\"] : \"\");\r\n    const [sauce, setSauce] = useState(edit ? initialIngredients[\"sauce\"]: \"\");\r\n    // input errors\r\n    const [titleError, setTitleError] = useState(\" \");\r\n    const [descriptionError, setDescriptionError] = useState(\" \");\r\n    const [sausageError, setSausageError] = useState(\" \");\r\n    const [sauceError, setSauceError] = useState(\" \");\r\n    // image\r\n    const [hotdogImage, setHotdogImage] = useState(null);\r\n    const [hotdogImageUrl, setHotdogImageUrl] = useState(edit ? initialHotdogImageUrl : constants[\"hotdogImageUrl\"]);\r\n    const [openPhotoDialog, setOpenPhotoDialog] = useState(false);\r\n    // separate topping/errors Maps, since not always updating error while updating topping (i.e. textfield -> onchange)\r\n    const initialToppings = edit ? initialIngredients[\"toppings\"].map((t, i) => [i, t]) : undefined;\r\n    const initialToppingErrors = edit ? initialIngredients[\"toppings\"].map((t, i) => [i, \" \"]) : undefined;\r\n    const [toppings, setToppings] = useState(new Map(initialToppings));\r\n    const [toppingErrors, setToppingErrors] = useState(new Map(initialToppingErrors));\r\n\r\n    function removeTopping(key) {\r\n        var t = new Map(toppings);\r\n        t.delete(key);\r\n        setToppings(t);\r\n    }\r\n\r\n    function removeToppingError(key) {\r\n        var e = new Map(toppingErrors);\r\n        e.delete(key);\r\n        setToppingErrors(e);\r\n    }\r\n\r\n    function updateToppings(key, value) {\r\n        setToppings(new Map(toppings.set(key, value)));\r\n    }\r\n    \r\n    function updateToppingErrors(key, value) {\r\n        setToppingErrors(new Map(toppingErrors.set(key, value)));\r\n    }\r\n\r\n    // adds a topping and error state variables\r\n    function handleAddTopping() {\r\n        const toppingId = uuidv4();\r\n        updateToppings(toppingId, \"\");\r\n        updateToppingErrors(toppingId, \" \");\r\n    }\r\n\r\n    // removes given topping and error state variables\r\n    function handleRemoveTopping(toppingId) {\r\n        removeTopping(toppingId);\r\n        removeToppingError(toppingId);\r\n    }\r\n\r\n    function handleOpenPhotoDialog() {\r\n        setOpenPhotoDialog(true);\r\n    }\r\n\r\n    function handleResetPhoto() {\r\n        setHotdogImage(null);\r\n        setHotdogImageUrl(constants[\"hotdogImageUrl\"]);\r\n    }\r\n\r\n\r\n    function handleSubmit() {\r\n        // handle consecutive submits on same form\r\n        setOpenSnackbar(false);\r\n        \r\n        const titleValid = isValid(title, setTitle, setTitleError);\r\n        const sausageValid = isValid(sausage, setSausage, setSausageError);\r\n        const sauceValid = isValid(sauce, setSauce, setSauceError);\r\n        let toppingsValid = true;\r\n        for (const key of toppings.keys()) {\r\n            let topping = toppings.get(key);\r\n            if (!isValidTopping(topping, key, updateToppings, updateToppingErrors)) {\r\n                toppingsValid = false;\r\n            }\r\n        }\r\n\r\n        // check errors with local vars, since setError functions are asynchronous\r\n        if (titleValid && sausageValid && sauceValid && toppingsValid) {\r\n            // strip topping ids\r\n            setLoading(true);\r\n            let toppingsArray = [];\r\n            for (const topping of toppings.values()) {\r\n                toppingsArray.push(topping);\r\n            }\r\n            \r\n            let hotdog = { \r\n                description: description, \r\n                sauce: sauce, \r\n                sausage: sausage, \r\n                toppings: toppingsArray, \r\n                title: title \r\n            };\r\n\r\n            if (edit) {\r\n                // remove fields from changes if same as initial - ignore title\r\n                const initial = {\r\n                    description: initialDescription,\r\n                    sauce: initialIngredients[\"sauce\"],\r\n                    sausage: initialIngredients[\"sausage\"],\r\n                    toppings: initialIngredients[\"toppings\"],\r\n                };\r\n                delete hotdog[\"title\"];\r\n                const changes = removeMatching(hotdog, initial);\r\n                \r\n                // update hotdog details (triggers real-time update of details dialog)\r\n                (async () => {\r\n                    let editSuccess = false;\r\n                    if (!isEmpty(changes)) {\r\n                        editSuccess = await DB.patchHotdog(id, changes);\r\n                    }\r\n                    // update details dialog image to simulate \"real-time\" since storage doesn't support it\r\n                    if (hotdogImageUrl !== initialHotdogImageUrl) {\r\n                        let url = await DB.putHotdogImage(id, hotdogImage);\r\n                        editSuccess = url !== false;\r\n                        if (editSuccess) {\r\n                            const finalUrl = url || constants[\"hotdogImageUrl\"];\r\n                            setHotdogImageUrl(finalUrl);\r\n                            setDialogHotdogImageUrl(finalUrl);\r\n                        }\r\n                    }\r\n                    if (editSuccess) {\r\n                        setEditId(id);\r\n                    } else {\r\n                        // console.log(\"something went wrong with editing...\");\r\n                    }\r\n                    setLoading(false);\r\n                    setOpenSnackbar(true);\r\n                })();\r\n            } else {\r\n                hotdog[\"creatorId\"] = userId;\r\n                (async () => {\r\n                    let id = await DB.postHotdog(hotdog);\r\n                    let addSuccess = id !== false;\r\n                    if (addSuccess && hotdogImage) {\r\n                        addSuccess = await DB.postHotdogImage(id, hotdogImage);\r\n                    }\r\n                    if (addSuccess) {\r\n                        setTitle(\"\");\r\n                        setDescription(\"\");\r\n                        setSausage(\"\");\r\n                        setSauce(\"\");\r\n                        setToppings(new Map());\r\n                        setHotdogImage(null);\r\n                        setHotdogImageUrl(constants[\"hotdogImageUrl\"]);   \r\n                        setAddId(id);\r\n                    } else {\r\n                        // console.log(\"something went wrong with adding...\");\r\n                    }\r\n                    setLoading(false);\r\n                    setOpenSnackbar(true);\r\n                })();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <FormMessage variant=\"body2\" color=\"textSecondary\" style={{ paddingBottom: 'unset' }}>\r\n                { hotdogImageUrl === constants[\"hotdogImageUrl\"] && \"Select a new picture by clicking the hotdog below\" }\r\n                { hotdogImageUrl !== constants[\"hotdogImageUrl\"] && \"Your hotdog picture\" }\r\n            </FormMessage>\r\n            <FormButtonWrapper style={{ borderBottom: '1px solid #cbb09c' }}>\r\n                <ImageButtonDouble\r\n                    imageUrl={hotdogImageUrl}\r\n                    iconNameOne=\"camera\"\r\n                    iconNameTwo=\"delete\"\r\n                    handleClickOne={handleOpenPhotoDialog}\r\n                    handleClickTwo={handleResetPhoto}\r\n                />\r\n            </FormButtonWrapper>\r\n            <PhotoUploadDialog \r\n                photoType=\"hotdog\" \r\n                setPhoto={setHotdogImage} \r\n                photoUrl={hotdogImageUrl}\r\n                setPhotoUrl={setHotdogImageUrl}\r\n                open={openPhotoDialog}\r\n                setOpen={setOpenPhotoDialog}\r\n            />\r\n            <FormField\r\n                type=\"text\"\r\n                iconName=\"hotdogTitle\"\r\n                label=\"Title\"\r\n                value={title}\r\n                setValue={setTitle}\r\n                error={titleError}\r\n                disabled={edit}\r\n            />\r\n            <FormField\r\n                type=\"text\"\r\n                iconName=\"hotdogDescription\"\r\n                label=\"Description\"\r\n                value={description}\r\n                setValue={setDescription}\r\n                error={descriptionError}\r\n                multiline\r\n            />\r\n            <FormField\r\n                type=\"text\"\r\n                iconName=\"hotdogSausage\"\r\n                label=\"Sausage\"\r\n                value={sausage}\r\n                setValue={setSausage}\r\n                error={sausageError}\r\n            />\r\n            <FormField\r\n                type=\"text\"\r\n                iconName=\"hotdogSauce\"\r\n                label=\"Sauce\"\r\n                value={sauce}\r\n                setValue={setSauce}\r\n                error={sauceError}\r\n            />\r\n            {[...toppings.keys()].map((key, i) => (\r\n                <FormField\r\n                    key={key}\r\n                    type=\"text\"\r\n                    iconName={i === 0 ? \"hotdogTopping\" : \"none\"}\r\n                    label=\"Topping\"\r\n                    value={toppings.get(key)}\r\n                    setValue={updateToppings}\r\n                    error={toppingErrors.get(key)}\r\n                    topping\r\n                    toppingKey={key}\r\n                    toppingRemove={handleRemoveTopping}\r\n                />\r\n            ))}\r\n            <FormButtonWrapper>\r\n                { toppings.size < constants[\"maxToppings\"] &&\r\n                    <Button\r\n                        variant=\"text\"\r\n                        color=\"primary\"\r\n                        disableElevation\r\n                        startIcon={<Icon name=\"addTopping\" />}\r\n                        onClick={() => handleAddTopping()}\r\n                    >\r\n                        Add Topping\r\n                    </Button>\r\n                }\r\n                { toppings.size === constants[\"maxToppings\"] &&\r\n                    <Button\r\n                        disabled\r\n                        variant=\"text\"\r\n                        color=\"primary\"\r\n                        disableElevation\r\n                        startIcon={<Icon name=\"addToppingDisabled\" />}\r\n                    >\r\n                        Max. Toppings reached ({constants[\"maxToppings\"]})\r\n                    </Button>\r\n                }\r\n            </FormButtonWrapper>\r\n            <FormButtonWrapper>\r\n                <ProgressButton \r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    loading={loading} \r\n                    handleClick={handleSubmit}\r\n                >\r\n                    Submit\r\n                </ProgressButton>\r\n            </FormButtonWrapper>\r\n            <SuccessSnackbar\r\n                open={openSnackbar}\r\n                setOpen={setOpenSnackbar}\r\n                message={edit ? \"Updated hotdog\" : \"Posted new hotdog!\"}\r\n            />\r\n        </Form>\r\n    );\r\n} \r\n\r\nexport default HotdogForm;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { \r\n    Box, IconButton, Typography,\r\n    Dialog, DialogContent\r\n} from '@material-ui/core';\r\nimport Icon from '../utils/icons';\r\n// my components\r\nimport HotdogForm from './hotdogForm';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        paddingLeft: '50px'\r\n    },\r\n    dialogContent: {\r\n        paddingLeft: '5px!important',\r\n        paddingRight: '5px!important'\r\n    }\r\n}));\r\n\r\n/* \r\n    Dialog wrapper for HotdogForm - used in HotdogGrid & HotdogDetailsDialog\r\n        id, description, ..., setDialogHotdogImageUrl - used exclusively in HotdogDetailsDialog\r\n        setAddId, setEditId - used exclusively for HotdogGrid fake real-time\r\n*/ \r\nfunction HotdogFormDialog(props) {\r\n    const { \r\n        open, setOpen,\r\n        id, description, ingredients, title, edit, dialogHotdogImageUrl, setDialogHotdogImageUrl,\r\n        setAddId, setEditId,\r\n    } = props;\r\n    const classes = useStyles();\r\n\r\n    function handleClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <Dialog \r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            open={open}\r\n            onClose={() => handleClose()}\r\n        >\r\n            <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n                <Box flexGrow={1}>\r\n                    <Typography \r\n                        variant=\"h5\" \r\n                        align=\"center\" \r\n                        color=\"textSecondary\"\r\n                        className={classes.title}\r\n                    > \r\n                        {edit && \"Edit hotdog\"}\r\n                        {!edit && \"Post a new hotdog\"}\r\n                    </Typography>\r\n                </Box>\r\n                <Box>\r\n                    <IconButton onClick={() => handleClose()}>\r\n                        <Icon name=\"close\" />\r\n                    </IconButton>\r\n                </Box>\r\n            </Box>\r\n            <DialogContent className={classes.dialogContent}>\r\n                <HotdogForm\r\n                    id={id}\r\n                    initialDescription={description}\r\n                    initialHotdogImageUrl={dialogHotdogImageUrl}\r\n                    initialIngredients={ingredients}\r\n                    initialTitle={title}\r\n                    edit={edit}\r\n                    setDialogHotdogImageUrl={setDialogHotdogImageUrl}\r\n                    setAddId={setAddId}\r\n                    setEditId={setEditId}\r\n                />\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default HotdogFormDialog;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { \r\n    Avatar, Box, CircularProgress, Grid, IconButton, Paper, Typography,\r\n    Card, CardHeader, CardContent, CardMedia,\r\n    Dialog, DialogContent \r\n} from '@material-ui/core';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// my components\r\nimport HotdogFormDialog from './hotdogFormDialog';\r\nimport HotdogIngredientsList from './hotdogIngredientsList';\r\nimport Icon from '../utils/icons';\r\nimport constants from '../utils/constants';\r\nimport { secondsToDate } from '../utils/functions';\r\n// database\r\nimport * as DB from '../database/wrapper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    dialogContent: {\r\n        height: '700px'\r\n    },\r\n    // card darkens and shows icon on hover (i.e. same as imagebutton, but with a card)\r\n    buttonBase: {\r\n        width: '100%', \r\n        height: '100%',\r\n        color: '#cbb09c'\r\n    },\r\n    cardWrapper : {\r\n        position: 'relative',\r\n        padding: 'unset',\r\n        width: '100%', \r\n        height: '100%'\r\n    },\r\n    cardIcon: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: '-18px',\r\n        marginLeft: '-18px',\r\n        '&:hover': {\r\n            cursor: 'pointer',    \r\n        }\r\n    },\r\n    hover: {\r\n        cursor: 'pointer',\r\n        '-webkit-filter': 'brightness(35%)',\r\n    },\r\n    // restrict size of left half\r\n    card: {\r\n        width: '380px', \r\n        height: '100%'\r\n    },\r\n    // remove extra padding from bottom of mui's CardContent\r\n    cardContent: {\r\n        '&:last-child': {\r\n            paddingBottom: 'unset'\r\n        },\r\n    },\r\n    // add background to right half\r\n    paper: {\r\n        backgroundColor: '#f5f5f5',\r\n        height: '100%'\r\n    },\r\n    grid: {\r\n        height: '100%',\r\n    },\r\n    // description + comment section same padding as mui's CardHeader\r\n    description: {\r\n        color: 'rgba(0, 0, 0, 0.70)',\r\n        paddingLeft: '16px',\r\n        paddingRight: '30px',\r\n    },\r\n    comments: {\r\n        paddingLeft: '16px',\r\n        paddingRight: '30px',\r\n    },\r\n}));\r\n\r\n\r\n/* \r\n    Given hotdog id, retrieves hotdog details, supports real-time edits\r\n    setEditId used by HotdogGrid for fake real-time updates - passed down to HotdogFormDialog\r\n*/\r\nfunction HotdogDetailsDialog(props) {\r\n    const { id, open, setOpen, setEditId } = props;\r\n    const classes = useStyles();\r\n    // initial values to pass to hotdogformdialog\r\n    const [creatorName, setCreatorName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [ingredients, setIngredients] = useState(null);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [subheader, setSubheader] = useState(\"\");\r\n    const [dialogHotdogImageUrl, setDialogHotdogImageUrl] = useState(\"\");\r\n    const [creatorImageUrl, setCreatorImageUrl] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n    // edit form \r\n    const [openForm, setOpenForm] = useState(false);\r\n    const [hover, setHover] = useState(false);\r\n    // snapshot listener - detach on dialog close by calling again\r\n    const [unsubscribe, setUnsubscribe] = useState(null);\r\n\r\n\r\n    function handleOpenForm() {\r\n        setOpenForm(true);\r\n    }\r\n\r\n    function handleMouseEnter() {\r\n        setHover(true);\r\n    }\r\n\r\n    function handleMouseLeave() {\r\n        setHover(false);\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false);\r\n        unsubscribe();\r\n    }\r\n    \r\n    // get details on dialog open - allows consecutive opening of same hotdog (unlike id)\r\n    useEffect(() => {\r\n        if (open) {\r\n            setLoading(true);\r\n            (async () => {\r\n                // non-realtime data (except hotdogImageUrl - still need to retrieve on initial open)\r\n                let hotdogInitial = await DB.getHotdog(id);\r\n                let hotdogUrl = await DB.getHotdogImage(id);\r\n                let creatorUrl = await DB.getUserImage(hotdogInitial.creatorId);\r\n                let creator = await DB.getUser(hotdogInitial.creatorId);\r\n                setCreatorName(creator.name);\r\n                setCreatorImageUrl(creatorUrl);\r\n                setSubheader(secondsToDate(hotdogInitial.ts));\r\n                setDialogHotdogImageUrl(hotdogUrl || constants.hotdogImageUrl);\r\n\r\n                // get description, ingredients, and title in real-time\r\n                // unsubscribe on close ensures deletes from HotdogGrid are not caught by this listener\r\n                const listener = DB.getHotdogQuery(id).onSnapshot(snapshot => {\r\n                    // console.log(\"hotdog snapshot changed!\");\r\n                    let hotdog = snapshot.data();\r\n                    setDescription(hotdog.description);\r\n                    setIngredients(hotdog.ingredients);\r\n                    setTitle(hotdog.title);\r\n                    setLoading(false);\r\n                });\r\n                // NOTE: have to wrap in anonymous function - https://medium.com/swlh/how-to-store-a-function-with-the-usestate-hook-in-react-8a88dd4eede1\r\n                setUnsubscribe(() => listener);\r\n            })();\r\n        }\r\n    }, [open, id]);\r\n\r\n    return (\r\n        <>\r\n            <Dialog \r\n                fullWidth\r\n                maxWidth=\"lg\"\r\n                open={open}\r\n                onClose={() => handleClose()}\r\n            >\r\n                <DialogContent className={classes.dialogContent}>\r\n                    <Box display=\"flex\" flexDirection=\"row\" height=\"100%\" width=\"100%\">\r\n                        { loading && \r\n                            <Box\r\n                                display=\"flex\"\r\n                                flexDirection=\"column\"\r\n                                justifyContent=\"center\"\r\n                                alignItems=\"center\"\r\n                                height=\"100%\"\r\n                                width=\"100%\"\r\n                            >\r\n                                <CircularProgress color=\"primary\" size={100}/>\r\n                            </Box>\r\n                        }\r\n                        { !loading && \r\n                            <>\r\n                                <Box height=\"100%\">\r\n                                    <ButtonBase className={classes.buttonBase}>\r\n                                        <Box\r\n                                            onMouseEnter={() => handleMouseEnter()}\r\n                                            onMouseLeave={() => handleMouseLeave()} \r\n                                            onClick={() => handleOpenForm()}\r\n                                            className={classes.cardWrapper}\r\n                                        >\r\n                                            <Card \r\n                                                elevation={0}\r\n                                                square \r\n                                                className={\r\n                                                    `${classes.card} ` +\r\n                                                    (hover ? `${classes.hover}` : undefined)\r\n                                                }\r\n                                            >\r\n                                                <CardMedia image={dialogHotdogImageUrl} />\r\n                                                <CardContent className={classes.cardContent}>\r\n                                                    { !loading && \r\n                                                        <HotdogIngredientsList \r\n                                                            sausage={ingredients[\"sausage\"]}\r\n                                                            sauce={ingredients[\"sauce\"]}\r\n                                                            toppings={ingredients[\"toppings\"]}\r\n                                                            dialog\r\n                                                        />\r\n                                                    }\r\n                                                </CardContent>\r\n                                            </Card>\r\n                                            { hover &&\r\n                                                <Icon color=\"primary\" name=\"edit\" size=\"large\" className={classes.cardIcon} /> \r\n                                            }\r\n                                        </Box>\r\n                                    </ButtonBase>\r\n                                    <HotdogFormDialog\r\n                                        open={openForm}\r\n                                        setOpen={setOpenForm}\r\n                                        id={id}\r\n                                        description={description}\r\n                                        ingredients={ingredients}\r\n                                        title={title}\r\n                                        dialogHotdogImageUrl={dialogHotdogImageUrl}\r\n                                        setDialogHotdogImageUrl={setDialogHotdogImageUrl}\r\n                                        edit\r\n                                        setEditId={setEditId}\r\n                                    />\r\n                                </Box>\r\n                                <Box height=\"100%\" flexGrow={1}>\r\n                                    <Paper square elevation={0} className={classes.paper}>\r\n                                        <Grid container direction=\"column\" className={classes.grid}>\r\n                                            <Grid item>\r\n                                                <Box display=\"flex\" flexDirection=\"row\" width=\"100%\">\r\n                                                    <Box flexGrow={1}>\r\n                                                        <CardHeader\r\n                                                            avatar={<Avatar src={creatorImageUrl} />}\r\n                                                            title={title + \" by \" + creatorName}\r\n                                                            subheader={subheader}\r\n                                                        />\r\n                                                    </Box>\r\n                                                    <Box>\r\n                                                        <IconButton aria-label=\"close\" onClick={() => handleClose()}>\r\n                                                            <Icon name=\"close\" />\r\n                                                        </IconButton>\r\n                                                    </Box>\r\n                                                </Box>\r\n                                                <Typography variant=\"body2\" className={classes.description}>\r\n                                                    {description}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item className={classes.comments}>\r\n                                                <p> COMMENTS GO HERE </p>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Paper>\r\n                                </Box>\r\n\r\n                            </>\r\n                        }\r\n                    </Box>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HotdogDetailsDialog;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Box, Fab, Grid, LinearProgress, Typography } from '@material-ui/core';\r\nimport { Waypoint } from 'react-waypoint';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// my components\r\nimport HotdogCard from './hotdogCard';\r\nimport HotdogDetailsDialog from './hotdogDetailsDialog';\r\nimport HotdogFormDialog from './hotdogFormDialog';\r\nimport Icon from '../utils/icons';\r\nimport constants from '../utils/constants';\r\n// context\r\nimport { UserContext } from '../userContext';\r\n// database\r\nimport * as DB from '../database/wrapper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // allow card overlay to use position:absolute\r\n    cardWrapper: {\r\n        position:'relative'\r\n    },\r\n    // covers card image and text, fades out after 10s\r\n    cardOverlay: {\r\n        position: 'absolute',\r\n        top: '0',\r\n        left: '0',\r\n        height: '100%',\r\n        width: '100%',\r\n        zIndex: 2,\r\n        borderRadius: '4px',\r\n        boxSizing: 'border-box',\r\n        animation: `$fadeOut 10s linear`,\r\n    }, \r\n    \"@keyframes fadeOut\": {\r\n        \"0%\": {\r\n            border: '2px solid rgba(0, 230, 118, 1)',\r\n            backgroundColor: 'rgba(0, 230, 118, 0.3)',\r\n        },\r\n        \"100%\": {\r\n            border: '2px solid rgba(0, 230, 118, 0)',\r\n            backgroundColor: 'transparent'\r\n        }\r\n    },\r\n    // add hotdog button covers cardOverlay\r\n    fab: {\r\n        position: 'fixed', \r\n        bottom: '15px', \r\n        right: '15px',\r\n        zIndex: 3\r\n    },\r\n    // loading bar + wrapper\r\n    progressWrapper: {\r\n        height: '50px'\r\n    },\r\n    progress: {\r\n        height: '5px', \r\n        width: '85%'\r\n    },\r\n    // lines left and right of end text\r\n    endTextWrapper: {\r\n        width: '85%',\r\n        lineHeight: '0.1em', \r\n        borderBottom: '1px solid', \r\n    },\r\n    // same color as background, padding to prevent line from passing through text\r\n    endText: {\r\n        background: '#f5f5f5', \r\n        padding: '0 10px'\r\n    },\r\n    fullHeight: {\r\n        height: '100%'\r\n    }\r\n}));\r\n\r\n/*\r\n    given array of hotdogs, gets hotdog images, creator's profile image and name\r\n*/\r\nasync function getImages(hotdogs) {\r\n    let hd = [...hotdogs];\r\n    await Promise.all(hd.map(async (h) => {\r\n        const hotdogImageUrl = await DB.getHotdogImage(h.id);\r\n        const creatorImageUrl = await DB.getUserImage(h.creatorId);\r\n        const creator = await DB.getUser(h.creatorId);\r\n        h[\"hotdogImageUrl\"] = hotdogImageUrl || constants.hotdogImageUrl;\r\n        h[\"creatorImageUrl\"] = creatorImageUrl;\r\n        h[\"creatorName\"] = creator.name;\r\n    }));\r\n    return hd;\r\n}\r\n\r\nfunction HomeHotdogGrid() {\r\n    const { userId } = useContext(UserContext);\r\n    const [hotdogs, setHotdogs] = useState([]);\r\n    const classes = useStyles();\r\n    // add form\r\n    const [openAddDialog, setOpenAddDialog] = useState(false);\r\n    // hotdog details dialog\r\n    const [hotdogDetailsId, setHotdogDetailsId] = useState(\"\");\r\n    const [openDetailsDialog, setOpenDetailsDialog] = useState(false);\r\n    // pagination/fetching: max columns = 3 for now\r\n    const [fetchCount, setFetchCount] = useState(constants.maxHotdogColumns);\r\n    const [lastSnapshot, setLastSnapshot] = useState(null);\r\n    const [fetchLoading, setFetchLoading] = useState(true);\r\n    // add (HotdogFormDialog > HotdogForm), \r\n    // delete (HotdogCard), \r\n    // edit (HotdogDetailsDialog > HotdogFormDialog > HotdogForm) hotdog in fake real-time\r\n    const [addId, setAddId] = useState(\"\");\r\n    const [addLoading, setAddLoading] = useState(false);\r\n    const [editId, setEditId] = useState(\"\");\r\n    const [deleteId, setDeleteId] = useState(\"\");\r\n\r\n    /* \r\n    function handleOpenDetailsDialog() {\r\n        setOpenDetailsDialog(true);\r\n    }\r\n    */\r\n\r\n    function handleOpenAddDialog() {\r\n        setOpenAddDialog(true);\r\n    }\r\n\r\n    // hovering over hotdog unsets editId to allow consecutive edits of same hotdog \r\n    // note: hovering over a newly added hotdog will also unset editId - fine for now\r\n    function handleCardHover(event) {\r\n        event.target[\"className\"] = \"\";\r\n        setEditId(\"\");\r\n    }\r\n\r\n    function fetchMore() {\r\n        setFetchLoading(true);\r\n        let q = DB.getHotdogsNextQuery(userId, fetchCount);\r\n        if (lastSnapshot) {\r\n            q = q.startAfter(lastSnapshot);\r\n            // console.log(\"FETCHING FROM LAST SNAPSHOT: \" + lastSnapshot.data().title);\r\n        }\r\n        (async () => {\r\n            q.get().then(query => {\r\n                // prevent next fetch call if reached end\r\n                if (query.size < fetchCount) {\r\n                    setFetchCount(0);\r\n                }\r\n                if (!query.empty) {\r\n                    let next = [];\r\n                    query.forEach(doc => {\r\n                        let h = doc.data();\r\n                        h[\"id\"] = doc.id;\r\n                        h[\"ts\"] = doc.data().ts.seconds;\r\n                        h[\"snapshot\"] = doc;\r\n                        next.push(h);\r\n                    });\r\n                    // console.log(\"tried to fetch: \" + fetchCount + \", returned: \" + query.size);\r\n                    // set startAfter cursor for next fetch call, append current\r\n                    setLastSnapshot(next[next.length-1].snapshot);\r\n                    getImages(next).then(res => {\r\n                        setHotdogs(current => [...current, ...next]);\r\n                        setFetchLoading(false);\r\n                    });\r\n                } else {\r\n                    setFetchLoading(false);\r\n                }\r\n            }).catch(err => {\r\n                // console.log(err);\r\n            });\r\n        })();\r\n    }\r\n\r\n    /* \r\n        initial fetch call\r\n    */\r\n    useEffect(() => {\r\n        fetchMore();\r\n    }, []);\r\n\r\n    /* \r\n        used by fetchMore to always fill a row with 3 hotdog cards\r\n        unless fetchCount === 0, i.e. rendered all user's hotdogs (set by fetchMore)\r\n    */\r\n    useEffect(() => {\r\n        if (fetchCount !== 0) {\r\n            setFetchCount(constants.maxHotdogColumns - (hotdogs.length % constants.maxHotdogColumns));\r\n        }\r\n    }, [hotdogs]);\r\n\r\n    /* \r\n        fake real-time add\r\n    */\r\n    useEffect(() => {\r\n        if (addId) {\r\n            (async () => {\r\n                setAddLoading(true);\r\n                let h = await DB.getHotdogWithSnapshot(addId);\r\n                h[\"id\"] = addId;\r\n                getImages([h]).then(res => {\r\n                    setHotdogs(current => [res[0], ...current]);\r\n                    setAddLoading(false);\r\n                });\r\n            })();\r\n        }\r\n    }, [addId]);\r\n\r\n    /* \r\n        fake real-time edit - hover over edited hotdog to unset editId to allow consecutive edits\r\n        note: startAfter seems to only look at the snapshot's id - doesn't look at the data at all,\r\n        so no need to set a new lastSnapshot\r\n    */\r\n    useEffect(() => {\r\n        if (editId) {\r\n            (async () => {\r\n                let h = await DB.getHotdogWithSnapshot(editId);\r\n                h[\"id\"] = editId;\r\n                getImages([h]).then(res => {\r\n                    setHotdogs(current => current.map(hotdog => hotdog.id === res[0].id ? res[0] : hotdog));\r\n                });\r\n            })();\r\n        }\r\n    }, [editId]);\r\n\r\n    /*\r\n        fake real-time delete\r\n        finds previous snapshot if deleting last and there are still more hotdogs to fetch\r\n    */\r\n    useEffect(() => {\r\n        if (deleteId) {\r\n            if (deleteId === lastSnapshot.id && fetchCount !== 0) {\r\n                let previousSnapshot = null;\r\n                for (let i = 0; i < hotdogs.length; i++) {\r\n                    let h = hotdogs[i];\r\n                    if (h.id === deleteId) {\r\n                        if (i !== 0) {\r\n                            previousSnapshot = hotdogs[i-1].snapshot;\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                setLastSnapshot(previousSnapshot);\r\n            }\r\n            (async () => {\r\n                await DB.deleteHotdog(deleteId);\r\n                await DB.deleteHotdogImage(deleteId);\r\n                setHotdogs(current => current.filter(h => h.id !== deleteId));\r\n            })();\r\n        }\r\n    }, [deleteId]);\r\n\r\n    return (\r\n        <Box height=\"100%\" width=\"100%\">\r\n            <Grid container spacing={3} className={classes.fullHeight}>\r\n                {/* load bar for newly added hotdog */}\r\n                { addLoading &&\r\n                    <Grid item xs={4}>\r\n                        <Box\r\n                            display=\"flex\"\r\n                            flexDirection=\"column\"\r\n                            justifyContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            height=\"100%\"\r\n                            width=\"100%\"\r\n                        >\r\n                            <LinearProgress color=\"primary\" className={classes.progress} />\r\n                        </Box>\r\n                    </Grid>\r\n                }\r\n                { hotdogs.length !== 0 && hotdogs.map((hotdog, i) => (\r\n                    <Grid item key={hotdog.id} xs={4}>\r\n                        <Box className={classes.cardWrapper}>\r\n                            {/* overlay on adding/editing, disappears on hover or after a few seconds */}\r\n                            {(hotdog.id === editId || hotdog.id === addId) &&\r\n                                <div \r\n                                    className={classes.cardOverlay}\r\n                                    onMouseEnter={(event) => handleCardHover(event)}\r\n                                />\r\n                            }\r\n                            <HotdogCard\r\n                                id={hotdog.id}\r\n                                creatorId={hotdog.creatorId}\r\n                                creatorName={hotdog.creatorName}\r\n                                creatorImageUrl={hotdog.creatorImageUrl}\r\n                                hotdogImageUrl={hotdog.hotdogImageUrl}\r\n                                ingredients={hotdog.ingredients}\r\n                                title={hotdog.title}\r\n                                ts={hotdog.ts}\r\n                                setHotdogDetailsId={setHotdogDetailsId}\r\n                                setOpenDetailsDialog={setOpenDetailsDialog}\r\n                                setDeleteId={setDeleteId}\r\n                            />\r\n                        </Box>\r\n                        { fetchCount !== 0 && (i+1) === hotdogs.length &&\r\n                            <Waypoint onEnter={() => fetchMore()}/>\r\n                        }\r\n                    </Grid>\r\n                ))}\r\n                {/* load bar for fetching next hotdogs */}\r\n                { fetchLoading && \r\n                    <Box\r\n                        display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        width=\"100%\"\r\n                        className={hotdogs.length === 0 ? classes.fullHeight : classes.progressWrapper}\r\n                    >\r\n                        <LinearProgress color=\"primary\" className={classes.progress} />\r\n                    </Box>\r\n                }\r\n                {/* show message if reached end of hotdogs */}\r\n                { !fetchLoading && fetchCount === 0 && hotdogs.length !== 0 &&\r\n                    <Box\r\n                        display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        width=\"100%\"\r\n                        className={classes.progressWrapper}\r\n                    >\r\n                        <Typography color=\"textSecondary\" align=\"center\" className={classes.endTextWrapper}>\r\n                            <span className={classes.endText}>\r\n                                End\r\n                            </span>\r\n                        </Typography>\r\n                    </Box>\r\n                }\r\n                {/* user has no hotdogs to begin with */}\r\n                { !fetchLoading && fetchCount === 0 && hotdogs.length === 0 &&\r\n                    <Box\r\n                        display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                    >\r\n                        <Typography variant=\"h6\" color=\"primary\">\r\n                            No hotdogs yet! Click on the bottom right <Icon name=\"plus\" /> to post your first hotdog\r\n                        </Typography>\r\n                    </Box>\r\n                }\r\n            </Grid>\r\n            <Fab\r\n                aria-label=\"Add a hotdog\"\r\n                color=\"primary\"\r\n                onClick={() => handleOpenAddDialog()}\r\n                className={classes.fab}\r\n            >\r\n                <Icon name=\"plus\" color=\"secondary\" />\r\n            </Fab>\r\n            <HotdogFormDialog \r\n                open={openAddDialog} \r\n                setOpen={setOpenAddDialog} \r\n                setAddId={setAddId}\r\n            />\r\n            { hotdogDetailsId && \r\n                <HotdogDetailsDialog \r\n                    id={hotdogDetailsId}\r\n                    open={openDetailsDialog}\r\n                    setOpen={setOpenDetailsDialog}\r\n                    setEditId={setEditId}\r\n                />\r\n            }\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default HomeHotdogGrid;\r\n","import React, { useContext } from 'react';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport { HotdogGrid, Landing, PageTitle } from '../components';\r\n// context\r\nimport { UserContext } from '../userContext';\r\n\r\n// if not logged in, show welcome page; show hotdog grid otherwise\r\nfunction Home() {\r\n    const { userId } = useContext(UserContext);\r\n    if (!userId) {\r\n        return (\r\n            <Landing/>\r\n        );\r\n    } else if (userId) {\r\n        return (\r\n            <Container maxWidth=\"lg\">\r\n                <Box display=\"flex\" flexDirection=\"column\" height=\"100%\">\r\n                    <Box p={5} display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\r\n                        <PageTitle text=\"Your Hotdogs\"/>\r\n                    </Box>\r\n                    <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" flexGrow={1} width=\"100%\">\r\n                        <HotdogGrid/>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport { RegisterForm, PageTitle } from '../components';\r\n\r\nfunction Register() {\r\n    return (\r\n        <Container maxWidth=\"xs\">\r\n            <Box p={2}>\r\n                <PageTitle text=\"Sign Up\"/>\r\n            </Box>\r\n            <RegisterForm/>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\n// material ui\nimport Box from '@material-ui/core/Box';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n// routing\nimport { Switch, Route } from 'react-router-dom';\nimport * as routes from './utils/routes';\n// context\nimport { UserContextProvider } from './userContext';\n// my components/pages\nimport brandTheme from './utils/theme';\nimport { NavBar } from './components';\nimport { Home, Register } from './pages';\n\nconst theme = createMuiTheme(brandTheme);\n\nfunction App() {\n    return (\n        <UserContextProvider>\n            <ThemeProvider theme={theme}>\n                <Box display=\"flex\" flexDirection=\"column\" height=\"100%\">\n                    <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\n                        <NavBar/>\n                    </Box>\n                    <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" flexGrow={1} width=\"100%\">\n                        <Switch>\n                            <Route exact path={routes.HOME} component={Home}></Route>\n                            <Route exact path={routes.REGISTER} component={Register}></Route>\n                        </Switch>\n                    </Box>\n                </Box>\n            </ThemeProvider>\n        </UserContextProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <React.Fragment>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.Fragment>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}